{"ast":null,"code":"import _classCallCheck from \"d:\\\\NGapBatch - 2\\\\Training\\\\Day13\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"d:\\\\NGapBatch - 2\\\\Training\\\\Day13\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"d:\\\\NGapBatch - 2\\\\Training\\\\Day13\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"d:\\\\NGapBatch - 2\\\\Training\\\\Day13\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"d:\\\\NGapBatch - 2\\\\Training\\\\Day13\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"d:\\\\NGapBatch - 2\\\\Training\\\\Day13\\\\my-app\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport { applyMiddleware } from 'redux';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './rootReducer';\nimport { composeWithDevTools } from 'redux-devtools-extension'; // import Toggle from './Toggle';\n\nimport { BrowserRouter as Router, Link, NavLink, Route, Switch } from 'react-router-dom';\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk'; // import MovieDetail from './movies/MovieDetail'\n\nimport MovieList from './movies/MovieList';\nvar middleware = [logger, thunk]; // const store = createStore(rootReducer);\n\nvar store = createStore(rootReducer, {}, composeWithDevTools(applyMiddleware.apply(void 0, middleware)));\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Provider, {\n        store: store,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(Router, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        component: MovieList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App; //create store\n// const hello = () => ({welcome : \"Hello\"})\n// const store = createStore(hello);\n// console.log(store.getState());\n// const defaultState = {\n//   menuName : \"View Products\",\n//   page : \"products.html\",\n//   menuID : \"1235\",\n//   pageContent : \"hi\"\n// }\n//reducer function\n// const greetings = (state=defaultState,action) => {\n//   const {type,pageName} = action\n//   // switch(action.type){\n//     switch(type){\n//     case 'PAGE_LOAD' :\n//     return {...state, pageContent : `Welcome to  ${pageName}`}\n//     case 'PAGE_CHANGE' : \n//     return {...state,pageContent : \"Page has Changed\"}\n//     default :\n//     return state \n//   }\n// }\n// const store = createStore(greetings)\n// console.log(store.getState())\n// const pageName = \"index.html\";\n// store.dispatch({\n//   type : \"PAGE_LOAD\",\n//   pageName\n// })\n// console.log(store.getState())","map":{"version":3,"sources":["d:\\NGapBatch - 2\\Training\\Day13\\my-app\\src\\App.js"],"names":["React","Component","applyMiddleware","createStore","Provider","rootReducer","composeWithDevTools","BrowserRouter","Router","Link","NavLink","Route","Switch","logger","thunk","MovieList","middleware","store","App"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,eAAT,QAAgC,OAAhC;AACA,SAAQC,WAAR,QAA0B,OAA1B;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,mBAAT,QAAoC,0BAApC,C,CACA;;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,IAFF,EAGEC,OAHF,EAIEC,KAJF,EAKEC,MALF,QAMO,kBANP;AASA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CACA;;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,IAAMC,UAAU,GAAG,CAACH,MAAD,EAAQC,KAAR,CAAnB,C,CAIA;;AACA,IAAMG,KAAK,GAAGd,WAAW,CAACE,WAAD,EAAc,EAAd,EAAkBC,mBAAmB,CAACJ,eAAe,MAAf,SAAmBc,UAAnB,CAAD,CAArC,CAAzB;;IAEME,G;;;;;;;;;;;;;6BACK;AACP,aACE,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGA;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHA,EAMA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,GAAlB;AAAsB,QAAA,SAAS,EAAEF,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CANA,CADA,CADF;AAeD;;;;EAjBed,S;;AAoBlB,eAAeiB,GAAf,C,CACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { Component } from 'react';\nimport { applyMiddleware } from 'redux';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux'\nimport rootReducer from './rootReducer'\nimport { composeWithDevTools } from 'redux-devtools-extension';\n// import Toggle from './Toggle';\nimport {\n  BrowserRouter as Router,\n  Link,\n  NavLink,\n  Route,\n  Switch\n} from 'react-router-dom'\n\n\nimport logger from 'redux-logger'\nimport thunk from 'redux-thunk'\n// import MovieDetail from './movies/MovieDetail'\nimport MovieList from './movies/MovieList'\nconst middleware = [logger,thunk]\n\n\n\n// const store = createStore(rootReducer);\nconst store = createStore(rootReducer, {}, composeWithDevTools(applyMiddleware(...middleware)));\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n      <Router>\n\n      \n      <div className=\"App\">\n        {/* <Toggle /> */}\n      </div>\n      <Switch>\n        <Route exact path=\"/\" component={MovieList}/>\n        {/* <Route path=\"/:id\" component={MovieDetail}/> */}\n      </Switch>\n      </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n//create store\n// const hello = () => ({welcome : \"Hello\"})\n// const store = createStore(hello);\n// console.log(store.getState());\n\n// const defaultState = {\n//   menuName : \"View Products\",\n//   page : \"products.html\",\n//   menuID : \"1235\",\n//   pageContent : \"hi\"\n// }\n\n//reducer function\n// const greetings = (state=defaultState,action) => {\n//   const {type,pageName} = action\n//   // switch(action.type){\n//     switch(type){\n//     case 'PAGE_LOAD' :\n//     return {...state, pageContent : `Welcome to  ${pageName}`}\n//     case 'PAGE_CHANGE' : \n//     return {...state,pageContent : \"Page has Changed\"}\n//     default :\n//     return state \n//   }\n// }\n\n// const store = createStore(greetings)\n// console.log(store.getState())\n// const pageName = \"index.html\";\n// store.dispatch({\n//   type : \"PAGE_LOAD\",\n//   pageName\n// })\n\n// console.log(store.getState())"]},"metadata":{},"sourceType":"module"}