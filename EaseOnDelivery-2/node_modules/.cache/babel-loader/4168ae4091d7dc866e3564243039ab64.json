{"ast":null,"code":"import _defineProperty from \"D:\\\\NGapBatch - 2\\\\Project\\\\EaseOnDelivery-2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\NGapBatch - 2\\\\Project\\\\EaseOnDelivery-2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\NGapBatch - 2\\\\Project\\\\EaseOnDelivery-2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\NGapBatch - 2\\\\Project\\\\EaseOnDelivery-2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\NGapBatch - 2\\\\Project\\\\EaseOnDelivery-2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\NGapBatch - 2\\\\Project\\\\EaseOnDelivery-2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\NGapBatch - 2\\\\Project\\\\EaseOnDelivery-2\\\\src\\\\_components\\\\orderAcceptance\\\\Notifications.js\";\nimport React from 'react';\nimport { withStyles, withTheme } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport AcceptOrder from './OrderAccept';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport { red } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { Link } from 'react-router-dom';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport TextField from '@material-ui/core/TextField';\nimport classNames from 'classnames';\nimport Typography from '@material-ui/core/Typography';\nvar muiTheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#ecebeb'\n    },\n    secondary: {\n      main: '#000'\n    }\n  }\n});\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    margin: {\n      margin: theme.spacing.unit\n    },\n    withoutLabel: {\n      marginTop: theme.spacing.unit * 3\n    },\n    textField: {\n      flexBasis: 200\n    },\n    card: {\n      maxWidth: 445\n    },\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    manDateTime: {\n      marginLeft: theme.spacing.unit,\n      marginRight: theme.spacing.unit,\n      width: 200\n    }\n  };\n};\n\nvar Notifications =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Notifications, _React$Component);\n\n  function Notifications() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Notifications);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Notifications)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      open: true,\n      isAccept: false,\n      latestColor: \"primary\",\n      acceptColor: \"primary\",\n      deliveredColor: \"primary\",\n      latestVariant: 'contained',\n      acceptVariant: 'contained',\n      deliveredVariant: 'contained',\n      inboxBookingDetails: [],\n      latestCardVisible: false,\n      cardVisible: false,\n      cardButtonVisible: 0,\n      // 0 - Latest 1 - Other\n      viewBookingID: 0,\n      viewDetailsEnabled: false,\n      currentOrderStatus: 'Yet to Pick Order',\n      customerPINDisabled: true,\n      storePINConfirmed: false,\n      customerPINConfirmed: false,\n      storePIN: 0,\n      customerPIN: 0\n    };\n\n    _this.setStateOnChange = function (stateObject) {\n      return function (e) {\n        _this.setState(_defineProperty({}, stateObject, e.target.value));\n      };\n    };\n\n    _this.verifyOrderTrackPin = function (type) {\n      console.log(\"just to check\");\n      console.log(\"Type is \", type);\n      var request = {};\n      var url = \"/verify/\";\n\n      if (type == 'S') {\n        url = \"\".concat(url).concat(_this.state.viewBookingID, \"/\").concat(type, \"/\").concat(_this.state.storePIN);\n      } else if (type == 'C') {\n        url = \"\".concat(url).concat(_this.state.viewBookingID, \"/\").concat(type, \"/\").concat(_this.state.customerPIN);\n      }\n\n      _this.props.callGetServices(url).then(function (response) {\n        console.log(\"response is \" + response);\n        var responseData = response.data;\n\n        if (responseData.responseCode == \"00\") {\n          if (type == 'S') {\n            _this.setState({\n              storePINConfirmed: true,\n              currentOrderStatus: \"Order Picked up, Moving towards Destination\"\n            });\n          } else if (type == 'C') {\n            _this.setState({\n              customerPINConfirmed: true,\n              currentOrderStatus: \"Order Delivered Successfully.!\"\n            });\n          }\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    _this.acceptOrder = function (type) {\n      console.log(\"inside acceptorder \", type);\n      var request = {};\n      var url = \"\";\n\n      if (type == 'ACCEPT') {\n        request = {\n          bookingID: _this.state.viewBookingID,\n          providerID: 2,\n          bookingTxnStatus: \"A\"\n        };\n      } else if (type == 'REJECT') {\n        request = {\n          bookingID: _this.state.viewBookingID,\n          providerID: 2,\n          bookingTxnStatus: \"R\"\n        };\n      }\n\n      _this.props.callPostServices(request, url).then(function (response) {\n        console.log(response);\n\n        if (type == 'ACCEPT') {// this.setState({\n          //   storePINConfirmed : true,\n          //   currentOrderStatus : \"Order Picked up, Moving towards Destination\"\n          // })\n        } else if (type == 'REJECT') {// this.setState({\n          //   customerPINConfirmed : true,\n          //   currentOrderStatus : \"Order Delivered Successfully.!\" \n          // })\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    _this.verifyPIN = function (type) {\n      console.log(\"Type is \", type); // var request = {};\n      // var url = \"/verify/\"\n      // if(type == 'S'){\n      //   url = `${url}${this.state.viewBookingID}/${type}/${this.state.storePIN}`\n      // }else if(type == 'C'){\n      //   url = `${url}${this.state.viewBookingID}/${type}/${this.state.customerPIN}`\n      // }\n      // this.props.callGetServices(url).then(response =>{\n      //   console.log(\"response is \" + response)\n      //   let responseData = response.data;\n      //   if(responseData.responseCode == \"00\"){\n      //     if(type == 'S'){\n      //       this.setState({\n      //         storePINConfirmed : true,\n      //         currentOrderStatus : \"Order Picked up, Moving towards Destination\"\n      //       })\n      //     }else if(type == 'C'){\n      //       this.setState({\n      //         customerPINConfirmed : true,\n      //         currentOrderStatus : \"Order Delivered Successfully.!\" \n      //       })\n      //     }\n      //   }\n      // }).catch(error => {\n      //   console.log(error)\n      // })\n    };\n\n    _this.viewBookings = function (bookingID) {\n      console.log(\"inside view bookings\" + bookingID);\n      var url = \"view/\" + bookingID;\n\n      _this.props.callGetServices(url).then(function (value) {\n        _this.setState({\n          inboxBookingDetails: value.data.bookingDetails\n        });\n\n        console.log(\"value is \" + value.data.bookingDetails);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    _this.getBookings = function (status) {\n      var url = \"searchRide/2/\" + status;\n\n      _this.props.callGetServices(url).then(function (value) {\n        _this.setState({\n          inboxBookingDetails: value.data.bookingDetails\n        });\n\n        console.log(\"value is \" + value.data.bookingDetails);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    _this.viewDetails = function (viewBookingID) {\n      console.log(\"inside View Details\" + viewBookingID);\n      var latestCardVisible = false;\n\n      if (_this.state.cardButtonVisible === 0) {\n        latestCardVisible = true;\n      } else {\n        latestCardVisible = false;\n      }\n\n      _this.setState({\n        latestCardVisible: latestCardVisible,\n        viewBookingID: viewBookingID,\n        viewDetailsEnabled: true,\n        cardVisible: true\n      });\n    };\n\n    _this.handleClickOpen = function (value) {\n      console.log(\"value is \", value);\n      var latestVariant = \"\";\n      var acceptVariant = \"\";\n      var deliveredVariant = \"\";\n      var latestColor = \"\";\n      var acceptColor = \"\";\n      var deliveredColor = \"\";\n      var cardButtonVisible = 0;\n      var status = \"I\";\n\n      if (value == 'latest') {\n        latestVariant = \"outlined\";\n        acceptVariant = \"contained\";\n        deliveredVariant = \"contained\";\n        latestColor = \"secondary\";\n        acceptColor = \"primary\";\n        deliveredColor = \"primary\";\n        cardButtonVisible = 0;\n        status = \"I\";\n      } else if (value == 'accept') {\n        latestVariant = \"contained\";\n        acceptVariant = \"outlined\";\n        deliveredVariant = \"contained\";\n        latestColor = \"primary\";\n        acceptColor = \"secondary\";\n        deliveredColor = \"primary\";\n        cardButtonVisible = 1;\n        status = \"A\";\n      } else if (value == 'delivered') {\n        latestVariant = \"contained\";\n        acceptVariant = \"contained\";\n        deliveredVariant = \"outlined\";\n        latestColor = \"primary\";\n        acceptColor = \"primary\";\n        deliveredColor = \"secondary\";\n        cardButtonVisible = 1;\n        status = \"D\";\n      }\n\n      _this.setState({\n        isAccept: true,\n        latestVariant: latestVariant,\n        acceptVariant: acceptVariant,\n        deliveredVariant: deliveredVariant,\n        latestColor: latestColor,\n        acceptColor: acceptColor,\n        deliveredColor: deliveredColor,\n        cardButtonVisible: cardButtonVisible,\n        viewDetailsEnabled: false,\n        latestCardVisible: false,\n        cardVisible: false\n      });\n\n      _this.getBookings(status);\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        open: false\n      });\n    };\n\n    _this.handleAccept = function () {\n      _this.setState({\n        isAccept: true\n      });\n\n      _this.handleClose();\n    };\n\n    return _this;\n  }\n\n  _createClass(Notifications, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(\"Request From Map \" + this.props.state.requestFromPopUp);\n      console.log(\"Booking ID is \" + this.props.state.viewBookingID);\n\n      if (this.props.state.requestFromPopUp === true) {\n        this.viewBookings(this.props.state.viewBookingID);\n      } else {\n        this.getBookings(\"I\");\n      }\n\n      this.handleClickOpen('latest');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var classes = this.props.classes;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, this.props.state.requestFromPopUp ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, this.state.inboxBookingDetails.map(function (value, index) {\n        return React.createElement(Card, {\n          key: value.bookingID,\n          className: classes.card + \" largeCard \",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 306\n          },\n          __self: this\n        }, React.createElement(List, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 307\n          },\n          __self: this\n        }, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 308\n          },\n          __self: this\n        }), React.createElement(ListItemText, {\n          className: \" listItemReceipt \",\n          primary: \"Pick Up\",\n          secondary: value.pickupLocation,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 309\n          },\n          __self: this\n        }), React.createElement(ListItemText, {\n          className: \" listItemReceipt \",\n          primary: \"Drop\",\n          secondary: value.dropLocation,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 310\n          },\n          __self: this\n        }), React.createElement(ListItemText, {\n          className: \" listItemReceipt \",\n          primary: \"Delivery Date\",\n          secondary: value.deliveryDate,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 311\n          },\n          __self: this\n        }), React.createElement(ListItemText, {\n          className: \" listItemReceipt \",\n          primary: \"Item Type\",\n          secondary: value.itemType,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 312\n          },\n          __self: this\n        }), React.createElement(ListItemText, {\n          className: \" listItemReceipt \",\n          primary: \"Tentative Weight\",\n          secondary: value.itemTentativeWeight,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 313\n          },\n          __self: this\n        }), React.createElement(ListItemText, {\n          className: \" listItemReceipt \",\n          primary: \"Vehicle Type\",\n          secondary: value.vehicleType,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 314\n          },\n          __self: this\n        }), React.createElement(ListItemText, {\n          className: \" listItemReceipt \",\n          primary: \"Store Person Name\",\n          secondary: value.storePersonName,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 315\n          },\n          __self: this\n        }), React.createElement(ListItemText, {\n          className: \" listItemReceipt \",\n          primary: \"Store Person No\",\n          secondary: value.storePersonContactNo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 316\n          },\n          __self: this\n        }), React.createElement(ListItemText, {\n          className: \" listItemReceipt \",\n          primary: \"Payment Mode\",\n          secondary: value.paymentMode,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 317\n          },\n          __self: this\n        })), React.createElement(CardActions, {\n          className: \" confirmButtonAction \",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 319\n          },\n          __self: this\n        }, React.createElement(Button, {\n          size: \"small\",\n          color: \"primary\",\n          className: \"button-lg\",\n          onClick: _this2.acceptOrder('ACCEPT'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 320\n          },\n          __self: this\n        }, \"ACCEPT BOOKING\"), React.createElement(Button, {\n          size: \"small\",\n          color: \"primary\",\n          className: \"button-lg\",\n          onClick: _this2.acceptOrder('REJECT'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 324\n          },\n          __self: this\n        }, \"REJECT BOOKING\")));\n      })) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }, React.createElement(MuiThemeProvider, {\n        theme: muiTheme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: this.state.latestVariant,\n        color: this.state.latestColor,\n        onClick: function onClick() {\n          return _this2.handleClickOpen('latest');\n        },\n        className: \"notificationButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      }, \"Latest\"), React.createElement(Button, {\n        variant: this.state.acceptVariant,\n        color: this.state.acceptColor,\n        onClick: function onClick() {\n          return _this2.handleClickOpen('accept');\n        },\n        className: \"notificationButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }, \"Accepted\"), React.createElement(Button, {\n        variant: this.state.deliveredVariant,\n        color: this.state.deliveredColor,\n        onClick: function onClick() {\n          return _this2.handleClickOpen('delivered');\n        },\n        className: \"notificationButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }, \"DELIVERED\")), React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }, this.state.inboxBookingDetails.length > 0 ? !this.state.viewDetailsEnabled && this.state.inboxBookingDetails.map(function (value, index) {\n        return value.bookingID % 2 === 0 ? React.createElement(ListItem, {\n          key: value.bookingID,\n          className: \"notificationListOdd\",\n          onClick: function onClick() {\n            return _this2.viewDetails(value.bookingID);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 350\n          },\n          __self: this\n        }, React.createElement(ListItemText, {\n          primary: \"BookingID : \".concat(value.bookingID, \" : Pickup:  \").concat(value.pickupLocation, \" - Drop : \").concat(value.dropLocation),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 351\n          },\n          __self: this\n        })) : React.createElement(ListItem, {\n          key: value.bookingID,\n          className: \"notificationListEven\",\n          onClick: function onClick() {\n            return _this2.viewDetails(value.bookingID);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 356\n          },\n          __self: this\n        }, React.createElement(ListItemText, {\n          primary: \"BookingID : \".concat(value.bookingID, \" : Pickup:  \").concat(value.pickupLocation, \" - Drop : \").concat(value.dropLocation),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 357\n          },\n          __self: this\n        }));\n      }) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365\n        },\n        __self: this\n      }, \"Currently Bookings not available\"), this.state.inboxBookingDetails.map(function (value, index) {\n        return _this2.state.cardVisible && _this2.state.viewBookingID === value.bookingID && React.createElement(Card, {\n          key: value.bookingID,\n          className: classes.card + \" largeCard \",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 369\n          },\n          __self: this\n        }, React.createElement(List, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 370\n          },\n          __self: this\n        }, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 371\n          },\n          __self: this\n        }), React.createElement(ListItemText, {\n          className: \" listItemReceipt \",\n          primary: \"Pick Up\",\n          secondary: value.pickupLocation,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 372\n          },\n          __self: this\n        }), React.createElement(ListItemText, {\n          className: \" listItemReceipt \",\n          primary: \"Drop\",\n          secondary: value.dropLocation,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 373\n          },\n          __self: this\n        }), React.createElement(ListItemText, {\n          className: \" listItemReceipt \",\n          primary: \"Delivery Date\",\n          secondary: value.deliveryDate,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 374\n          },\n          __self: this\n        }), React.createElement(ListItemText, {\n          className: \" listItemReceipt \",\n          primary: \"Item Type\",\n          secondary: value.itemType,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 375\n          },\n          __self: this\n        }), React.createElement(ListItemText, {\n          className: \" listItemReceipt \",\n          primary: \"Tentative Weight\",\n          secondary: value.itemTentativeWeight,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 376\n          },\n          __self: this\n        }), React.createElement(ListItemText, {\n          className: \" listItemReceipt \",\n          primary: \"Vehicle Type\",\n          secondary: value.vehicleType,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 377\n          },\n          __self: this\n        }), React.createElement(ListItemText, {\n          className: \" listItemReceipt \",\n          primary: \"Store Person Name\",\n          secondary: value.storePersonName,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 378\n          },\n          __self: this\n        }), React.createElement(ListItemText, {\n          className: \" listItemReceipt \",\n          primary: \"Store Person No\",\n          secondary: value.storePersonContactNo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 379\n          },\n          __self: this\n        }), React.createElement(ListItemText, {\n          className: \" listItemReceipt \",\n          primary: \"Payment Mode\",\n          secondary: value.paymentMode,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 380\n          },\n          __self: this\n        }), React.createElement(ListItemText, {\n          className: \" listItemReceipt \",\n          primary: \"Current Order Status\",\n          secondary: _this2.state.currentOrderStatus,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 381\n          },\n          __self: this\n        }), React.createElement(ListItemText, {\n          className: \" listItemReceipt \",\n          primary: \"\",\n          secondary: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 382\n          },\n          __self: this\n        }), React.createElement(ListItemText, {\n          className: \" listItemReceipt \",\n          primary: \"\",\n          secondary: \" \",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 383\n          },\n          __self: this\n        })), _this2.state.latestCardVisible ? React.createElement(CardActions, {\n          className: \" confirmButtonAction \",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 387\n          },\n          __self: this\n        }, React.createElement(Button, {\n          size: \"small\",\n          color: \"primary\",\n          className: \"button-lg\",\n          onClick: _this2.acceptOrder('ACCEPT'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 388\n          },\n          __self: this\n        }, \"ACCEPT BOOKING\"), React.createElement(Button, {\n          size: \"small\",\n          color: \"primary\",\n          className: \"button-lg\",\n          onClick: _this2.acceptOrder('REJECT'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 392\n          },\n          __self: this\n        }, \"REJECT BOOKING\")) : React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 398\n          },\n          __self: this\n        }, !_this2.state.storePINConfirmed && React.createElement(Card, {\n          className: classes.card + \" smallCard \",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 400\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          gutterBottom: true,\n          variant: \"h5\",\n          component: \"h2\",\n          className: \"typography\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 401\n          },\n          __self: this\n        }, \"Verify Store PIN\"), React.createElement(TextField, {\n          className: classNames(classes.margin, classes.textField) + \" fields \",\n          label: \"Store PIN\",\n          placeholder: \"Enter Store PIN\",\n          onChange: _this2.setStateOnChange('storePIN'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 404\n          },\n          __self: this\n        }), React.createElement(CardActions, {\n          className: \" confirmButtonAction \",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 410\n          },\n          __self: this\n        }, React.createElement(Button, {\n          size: \"small\",\n          color: \"primary\",\n          className: \"button-lg\",\n          onClick: _this2.verifyOrderTrackPin('S'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 411\n          },\n          __self: this\n        }, \"SUBMIT\"))), !_this2.state.customerPINConfirmed && React.createElement(Card, {\n          className: classes.card + \" smallCard \",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 419\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          gutterBottom: true,\n          variant: \"h5\",\n          component: \"h2\",\n          className: \"typography\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 420\n          },\n          __self: this\n        }, \"Verify Customer PIN\"), React.createElement(TextField, {\n          className: classNames(classes.margin, classes.textField) + \" fields \",\n          label: \"Customer PIN\",\n          placeholder: \"Enter Customer PIN\",\n          disabled: _this2.state.customerPINDisabled,\n          onChange: _this2.setStateOnChange('customerPIN'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 423\n          },\n          __self: this\n        }), React.createElement(CardActions, {\n          className: \" confirmButtonAction \",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 430\n          },\n          __self: this\n        }, React.createElement(Button, {\n          size: \"small\",\n          color: \"primary\",\n          className: \"button-lg\",\n          onClick: _this2.verifyPIN('C'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 431\n          },\n          __self: this\n        }, \"SUBMIT\")))));\n      }))));\n    }\n  }]);\n\n  return Notifications;\n}(React.Component); // export default Notifications;\n\n\nexport default withStyles(styles)(Notifications);","map":{"version":3,"sources":["D:\\NGapBatch - 2\\Project\\EaseOnDelivery-2\\src\\_components\\orderAcceptance\\Notifications.js"],"names":["React","withStyles","withTheme","Button","AcceptOrder","createMuiTheme","MuiThemeProvider","red","List","ListItem","ListItemText","Link","Card","CardActions","CardContent","TextField","classNames","Typography","muiTheme","palette","primary","main","secondary","styles","theme","root","display","flexWrap","margin","spacing","unit","withoutLabel","marginTop","textField","flexBasis","card","maxWidth","container","manDateTime","marginLeft","marginRight","width","Notifications","state","open","isAccept","latestColor","acceptColor","deliveredColor","latestVariant","acceptVariant","deliveredVariant","inboxBookingDetails","latestCardVisible","cardVisible","cardButtonVisible","viewBookingID","viewDetailsEnabled","currentOrderStatus","customerPINDisabled","storePINConfirmed","customerPINConfirmed","storePIN","customerPIN","setStateOnChange","stateObject","e","setState","target","value","verifyOrderTrackPin","type","console","log","request","url","props","callGetServices","then","response","responseData","data","responseCode","catch","error","acceptOrder","bookingID","providerID","bookingTxnStatus","callPostServices","verifyPIN","viewBookings","bookingDetails","getBookings","status","viewDetails","handleClickOpen","handleClose","handleAccept","requestFromPopUp","classes","map","index","pickupLocation","dropLocation","deliveryDate","itemType","itemTentativeWeight","vehicleType","storePersonName","storePersonContactNo","paymentMode","length","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { withStyles, withTheme } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport AcceptOrder from './OrderAccept'\r\nimport { createMuiTheme,MuiThemeProvider } from '@material-ui/core/styles';\r\nimport { red } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport {Link}from 'react-router-dom'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport classNames from 'classnames';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst muiTheme = createMuiTheme({\r\n  palette: {\r\n      primary: {\r\n          main: '#ecebeb',\r\n      },\r\n      secondary: {\r\n          main: '#000',\r\n      },\r\n  },\r\n});\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  margin: {\r\n    margin: theme.spacing.unit,\r\n  },\r\n  withoutLabel: {\r\n    marginTop: theme.spacing.unit * 3,\r\n  },\r\n  textField: {\r\n    flexBasis: 200,\r\n  },\r\n  card: {\r\n    maxWidth: 445,\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  manDateTime: {\r\n    marginLeft: theme.spacing.unit,\r\n    marginRight: theme.spacing.unit,\r\n    width: 200,\r\n  },\r\n  \r\n});\r\n\r\nclass Notifications extends React.Component {\r\n  state = {\r\n    open: true,\r\n    isAccept : false,\r\n    latestColor : \"primary\",\r\n    acceptColor : \"primary\",\r\n    deliveredColor : \"primary\",\r\n    latestVariant : 'contained',\r\n    acceptVariant : 'contained',\r\n    deliveredVariant : 'contained',\r\n    inboxBookingDetails : [],\r\n    latestCardVisible : false,\r\n    cardVisible : false,\r\n    cardButtonVisible : 0, // 0 - Latest 1 - Other\r\n    viewBookingID : 0,\r\n    viewDetailsEnabled : false,\r\n    currentOrderStatus : 'Yet to Pick Order',\r\n    customerPINDisabled : true,\r\n    storePINConfirmed : false,\r\n    customerPINConfirmed : false,\r\n    storePIN : 0,\r\n    customerPIN : 0\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log(\"Request From Map \" + this.props.state.requestFromPopUp);\r\n    console.log(\"Booking ID is \" + this.props.state.viewBookingID);\r\n    if(this.props.state.requestFromPopUp === true){\r\n      this.viewBookings(this.props.state.viewBookingID);    \r\n    }else{\r\n      this.getBookings(\"I\");\r\n    }\r\n    this.handleClickOpen('latest');\r\n  }\r\n\r\n  setStateOnChange = (stateObject) => (e) => {\r\n    this.setState ({ [stateObject] : e.target.value})\r\n  }\r\n\r\n  verifyOrderTrackPin = (type) => {\r\n    console.log(\"just to check\")\r\n    console.log(\"Type is \" , type);\r\n    var request = {};\r\n    var url = \"/verify/\"\r\n    if(type == 'S'){\r\n      url = `${url}${this.state.viewBookingID}/${type}/${this.state.storePIN}`\r\n    }else if(type == 'C'){\r\n      url = `${url}${this.state.viewBookingID}/${type}/${this.state.customerPIN}`\r\n    }\r\n\r\n    this.props.callGetServices(url).then(response =>{\r\n      console.log(\"response is \" + response)\r\n      let responseData = response.data;\r\n      if(responseData.responseCode == \"00\"){\r\n        if(type == 'S'){\r\n          this.setState({\r\n            storePINConfirmed : true,\r\n            currentOrderStatus : \"Order Picked up, Moving towards Destination\"\r\n          })\r\n        }else if(type == 'C'){\r\n          this.setState({\r\n            customerPINConfirmed : true,\r\n            currentOrderStatus : \"Order Delivered Successfully.!\" \r\n          })\r\n        }\r\n      }\r\n    }).catch(error => {\r\n      console.log(error)\r\n    })\r\n  }\r\n  acceptOrder = (type) => {\r\n    console.log(\"inside acceptorder \" , type);\r\n    var request = {};\r\n    var url = \"\"\r\n    if(type == 'ACCEPT'){\r\n      request = {\r\n        bookingID : this.state.viewBookingID,\r\n        providerID : 2,\r\n        bookingTxnStatus : \"A\",\r\n      }\r\n    }else if(type == 'REJECT'){\r\n      request = {\r\n        bookingID : this.state.viewBookingID,\r\n        providerID : 2,\r\n        bookingTxnStatus : \"R\",\r\n      }\r\n    }\r\n    this.props.callPostServices(request,url).then(response =>{\r\n      console.log(response)\r\n      if(type == 'ACCEPT'){\r\n        // this.setState({\r\n        //   storePINConfirmed : true,\r\n        //   currentOrderStatus : \"Order Picked up, Moving towards Destination\"\r\n        // })\r\n      }else if(type == 'REJECT'){\r\n        // this.setState({\r\n        //   customerPINConfirmed : true,\r\n        //   currentOrderStatus : \"Order Delivered Successfully.!\" \r\n        // })\r\n      }\r\n    }).catch(error => {\r\n      console.log(error)\r\n    })\r\n  }\r\n\r\n  verifyPIN = (type) => {\r\n    console.log(\"Type is \" , type);\r\n    // var request = {};\r\n    // var url = \"/verify/\"\r\n    // if(type == 'S'){\r\n    //   url = `${url}${this.state.viewBookingID}/${type}/${this.state.storePIN}`\r\n    // }else if(type == 'C'){\r\n    //   url = `${url}${this.state.viewBookingID}/${type}/${this.state.customerPIN}`\r\n    // }\r\n\r\n    // this.props.callGetServices(url).then(response =>{\r\n    //   console.log(\"response is \" + response)\r\n    //   let responseData = response.data;\r\n    //   if(responseData.responseCode == \"00\"){\r\n    //     if(type == 'S'){\r\n    //       this.setState({\r\n    //         storePINConfirmed : true,\r\n    //         currentOrderStatus : \"Order Picked up, Moving towards Destination\"\r\n    //       })\r\n    //     }else if(type == 'C'){\r\n    //       this.setState({\r\n    //         customerPINConfirmed : true,\r\n    //         currentOrderStatus : \"Order Delivered Successfully.!\" \r\n    //       })\r\n    //     }\r\n    //   }\r\n    // }).catch(error => {\r\n    //   console.log(error)\r\n    // })\r\n  }\r\n\r\n  viewBookings = (bookingID) => {\r\n    console.log(\"inside view bookings\" + bookingID)\r\n    let url = \"view/\" + bookingID;\r\n    this.props.callGetServices(url).then(value =>{\r\n      this.setState({\r\n        inboxBookingDetails : value.data.bookingDetails\r\n      })\r\n      console.log(\"value is \" + value.data.bookingDetails)\r\n    }).catch(error =>{\r\n      console.log(error);\r\n    })\r\n  }\r\n\r\n  getBookings = (status) => {\r\n    let url = \"searchRide/2/\" + status;\r\n    this.props.callGetServices(url).then(value =>{\r\n      this.setState({\r\n        inboxBookingDetails : value.data.bookingDetails\r\n      })\r\n      console.log(\"value is \" + value.data.bookingDetails)\r\n    }).catch(error =>{\r\n      console.log(error);\r\n    })\r\n  }\r\n\r\n  viewDetails = (viewBookingID) =>{\r\n    console.log(\"inside View Details\" + viewBookingID)\r\n    var latestCardVisible = false;\r\n    if(this.state.cardButtonVisible === 0){\r\n      latestCardVisible = true;\r\n    }else{\r\n      latestCardVisible = false;\r\n    }\r\n\r\n    this.setState({\r\n      latestCardVisible : latestCardVisible,\r\n      viewBookingID : viewBookingID,\r\n      viewDetailsEnabled : true,\r\n      cardVisible : true\r\n    })\r\n  }\r\n\r\n  handleClickOpen = (value) => {\r\n    console.log(\"value is \", value);\r\n    var latestVariant = \"\";\r\n    var acceptVariant = \"\";\r\n    var deliveredVariant = \"\";\r\n    var latestColor = \"\";\r\n    var acceptColor = \"\";\r\n    var deliveredColor = \"\";\r\n    var cardButtonVisible = 0\r\n    var status = \"I\";\r\n    if(value == 'latest'){\r\n      latestVariant = \"outlined\";\r\n      acceptVariant = \"contained\";\r\n      deliveredVariant = \"contained\";\r\n      latestColor = \"secondary\";\r\n      acceptColor = \"primary\";\r\n      deliveredColor = \"primary\";\r\n      cardButtonVisible = 0;\r\n      status = \"I\";\r\n    }else if(value == 'accept'){\r\n      latestVariant = \"contained\";\r\n      acceptVariant = \"outlined\";\r\n      deliveredVariant = \"contained\";\r\n      latestColor = \"primary\";\r\n      acceptColor = \"secondary\";\r\n      deliveredColor = \"primary\";\r\n      cardButtonVisible = 1;\r\n      status = \"A\";\r\n    }else if(value == 'delivered'){\r\n      latestVariant = \"contained\";\r\n      acceptVariant = \"contained\";\r\n      deliveredVariant = \"outlined\";\r\n      latestColor = \"primary\";\r\n      acceptColor = \"primary\";\r\n      deliveredColor = \"secondary\";\r\n      cardButtonVisible = 1;\r\n      status = \"D\";\r\n    }\r\n\r\n    this.setState({\r\n      isAccept : true,\r\n      latestVariant : latestVariant,\r\n      acceptVariant : acceptVariant,\r\n      deliveredVariant : deliveredVariant,\r\n      latestColor : latestColor,\r\n      acceptColor : acceptColor,\r\n      deliveredColor : deliveredColor,\r\n      cardButtonVisible : cardButtonVisible,\r\n      viewDetailsEnabled : false,\r\n      latestCardVisible : false,\r\n      cardVisible : false\r\n    });\r\n    this.getBookings(status);\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  handleAccept = () =>{\r\n    this.setState({isAccept : true});\r\n    this.handleClose()\r\n  };\r\n  render() {\r\n    const { classes} = this.props;\r\n    return (\r\n      <div>\r\n        {this.props.state.requestFromPopUp ? (\r\n          <div>\r\n            {this.state.inboxBookingDetails.map((value,index) =>(\r\n              <Card key={value.bookingID} className={classes.card + \" largeCard \"}>\r\n                <List>\r\n                  <br/>\r\n                  <ListItemText className={\" listItemReceipt \"} primary=\"Pick Up\" secondary={value.pickupLocation} />\r\n                  <ListItemText className={\" listItemReceipt \"} primary=\"Drop\" secondary={value.dropLocation} />\r\n                  <ListItemText className={\" listItemReceipt \"} primary=\"Delivery Date\" secondary={value.deliveryDate} />\r\n                  <ListItemText className={\" listItemReceipt \"} primary=\"Item Type\" secondary={value.itemType} />\r\n                  <ListItemText className={\" listItemReceipt \"} primary=\"Tentative Weight\" secondary={value.itemTentativeWeight} />\r\n                  <ListItemText className={\" listItemReceipt \"} primary=\"Vehicle Type\" secondary={value.vehicleType} />\r\n                  <ListItemText className={\" listItemReceipt \"} primary=\"Store Person Name\" secondary={value.storePersonName} />\r\n                  <ListItemText className={\" listItemReceipt \"} primary=\"Store Person No\" secondary={value.storePersonContactNo} />\r\n                  <ListItemText className={\" listItemReceipt \"} primary=\"Payment Mode\" secondary={value.paymentMode} />\r\n                </List>\r\n                  <CardActions className={\" confirmButtonAction \"}>\r\n                  <Button size=\"small\" color=\"primary\" className=\"button-lg\" \r\n                    onClick = {this.acceptOrder('ACCEPT')}>\r\n                      ACCEPT BOOKING\r\n                  </Button>\r\n                  <Button size=\"small\" color=\"primary\" className=\"button-lg\" \r\n                    onClick = {this.acceptOrder('REJECT')}>\r\n                      REJECT BOOKING\r\n                  </Button>\r\n                </CardActions>\r\n              </Card>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <div>\r\n              <MuiThemeProvider theme={muiTheme}>\r\n                <Button variant={this.state.latestVariant} color={this.state.latestColor}  onClick={() => this.handleClickOpen('latest')} className = { \"notificationButton\" }>\r\n                  Latest\r\n                </Button>\r\n                <Button variant={this.state.acceptVariant} color={this.state.acceptColor} onClick={() => this.handleClickOpen('accept')} className = { \"notificationButton\" }>\r\n                  Accepted\r\n                </Button>\r\n                <Button variant={this.state.deliveredVariant} color={this.state.deliveredColor} onClick={() => this.handleClickOpen('delivered')} className = { \"notificationButton\" }>\r\n                  DELIVERED\r\n                </Button>\r\n              </MuiThemeProvider>\r\n              <List>\r\n                {this.state.inboxBookingDetails.length > 0 ? (\r\n                  !this.state.viewDetailsEnabled &&(\r\n                    this.state.inboxBookingDetails.map((value,index) =>(\r\n                      value.bookingID % 2 === 0 ?(\r\n                        <ListItem key={value.bookingID} className = { \"notificationListOdd\" }  onClick={() => this.viewDetails(value.bookingID)}>\r\n                          <ListItemText \r\n                            primary={`BookingID : ${value.bookingID} : Pickup:  ${value.pickupLocation} - Drop : ${value.dropLocation}`}\r\n                          />\r\n                        </ListItem>\r\n                      ) : (\r\n                        <ListItem key={value.bookingID} className = { \"notificationListEven\" } onClick={() => this.viewDetails(value.bookingID)}>\r\n                          <ListItemText\r\n                            primary={`BookingID : ${value.bookingID} : Pickup:  ${value.pickupLocation} - Drop : ${value.dropLocation}`}\r\n                          />\r\n                        </ListItem>\r\n                      )\r\n                    ))\r\n                  )\r\n                ):(\r\n                  <div>Currently Bookings not available</div>\r\n                )} \r\n                {this.state.inboxBookingDetails.map((value,index) =>(\r\n                  this.state.cardVisible && this.state.viewBookingID === value.bookingID &&(\r\n                    <Card key={value.bookingID} className={classes.card + \" largeCard \"}>\r\n                      <List>\r\n                        <br/>\r\n                        <ListItemText className={\" listItemReceipt \"} primary=\"Pick Up\" secondary={value.pickupLocation} />\r\n                        <ListItemText className={\" listItemReceipt \"} primary=\"Drop\" secondary={value.dropLocation} />\r\n                        <ListItemText className={\" listItemReceipt \"} primary=\"Delivery Date\" secondary={value.deliveryDate} />\r\n                        <ListItemText className={\" listItemReceipt \"} primary=\"Item Type\" secondary={value.itemType} />\r\n                        <ListItemText className={\" listItemReceipt \"} primary=\"Tentative Weight\" secondary={value.itemTentativeWeight} />\r\n                        <ListItemText className={\" listItemReceipt \"} primary=\"Vehicle Type\" secondary={value.vehicleType} />\r\n                        <ListItemText className={\" listItemReceipt \"} primary=\"Store Person Name\" secondary={value.storePersonName} />\r\n                        <ListItemText className={\" listItemReceipt \"} primary=\"Store Person No\" secondary={value.storePersonContactNo} />\r\n                        <ListItemText className={\" listItemReceipt \"} primary=\"Payment Mode\" secondary={value.paymentMode} />\r\n                        <ListItemText className={\" listItemReceipt \"} primary=\"Current Order Status\" secondary={this.state.currentOrderStatus} />\r\n                        <ListItemText className={\" listItemReceipt \"} primary=\"\" secondary=\"\" />\r\n                        <ListItemText className={\" listItemReceipt \"} primary=\"\" secondary= \" \" />\r\n                      </List>\r\n                      \r\n                      {this.state.latestCardVisible ? (\r\n                        <CardActions className={\" confirmButtonAction \"}>\r\n                          <Button size=\"small\" color=\"primary\" className=\"button-lg\" \r\n                            onClick = {this.acceptOrder('ACCEPT')}>\r\n                              ACCEPT BOOKING\r\n                          </Button>\r\n                          <Button size=\"small\" color=\"primary\" className=\"button-lg\" \r\n                            onClick = {this.acceptOrder('REJECT')}>\r\n                              REJECT BOOKING\r\n                          </Button>\r\n                        </CardActions>\r\n                      ) : (\r\n                        <div>\r\n                          {!this.state.storePINConfirmed && (\r\n                              <Card className={classes.card + \" smallCard \"}>\r\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\" className={\"typography\"}>\r\n                                    Verify Store PIN\r\n                                </Typography>\r\n                                  <TextField\r\n                                  className={classNames(classes.margin, classes.textField) + \" fields \"}\r\n                                  label=\"Store PIN\"\r\n                                  placeholder = \"Enter Store PIN\"\r\n                                  onChange = {this.setStateOnChange('storePIN')}\r\n                                  />\r\n                                  <CardActions className={\" confirmButtonAction \"}>\r\n                                    <Button size=\"small\" color=\"primary\" className=\"button-lg\" \r\n                                      onClick = {this.verifyOrderTrackPin('S')}>\r\n                                        SUBMIT\r\n                                    </Button>\r\n                                  </CardActions>\r\n                              </Card>\r\n                          )}\r\n                          {!this.state.customerPINConfirmed && (\r\n                              <Card className={classes.card + \" smallCard \"}>\r\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\" className={\"typography\"}>\r\n                                  Verify Customer PIN\r\n                                </Typography>\r\n                                <TextField\r\n                                className={classNames(classes.margin, classes.textField) + \" fields \"}\r\n                                label=\"Customer PIN\"\r\n                                placeholder = \"Enter Customer PIN\"\r\n                                disabled = {this.state.customerPINDisabled}\r\n                                onChange = {this.setStateOnChange('customerPIN')}\r\n                                />\r\n                                  <CardActions className={\" confirmButtonAction \"}>\r\n                                    <Button size=\"small\" color=\"primary\" className=\"button-lg\" \r\n                                      onClick = {this.verifyPIN('C')}>\r\n                                        SUBMIT\r\n                                    </Button>\r\n                                  </CardActions>\r\n                              </Card>\r\n                          )}\r\n                        </div>\r\n                      )}\r\n                    </Card>\r\n                  )\r\n                ))}\r\n              </List>\r\n          </div>\r\n        )}\r\n          \r\n          {/* {this.state.isAccept &&\r\n              <AcceptOrder />\r\n          } */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// export default Notifications;\r\nexport default withStyles(styles)(Notifications);"]},"metadata":{},"sourceType":"module"}