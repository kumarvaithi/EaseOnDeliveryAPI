{"ast":null,"code":"import _taggedTemplateLiteral from \"D:\\\\NGapBatch - 2\\\\Training\\\\Day12\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nimport _regeneratorRuntime from \"D:\\\\NGapBatch - 2\\\\Training\\\\Day12\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\NGapBatch - 2\\\\Training\\\\Day12\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"D:\\\\NGapBatch - 2\\\\Training\\\\Day12\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\NGapBatch - 2\\\\Training\\\\Day12\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\NGapBatch - 2\\\\Training\\\\Day12\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\NGapBatch - 2\\\\Training\\\\Day12\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\NGapBatch - 2\\\\Training\\\\Day12\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\NGapBatch - 2\\\\Training\\\\Day12\\\\my-app\\\\src\\\\MovieList.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    display: grid;\\n    padding : 1rem;\\n    grid-template-columns : repeat(6,1fr);\\n    grid-row-gap: 1rem;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { PureComponent } from 'react';\nimport styled from 'styled-components';\nimport Movie from './Movie';\n\nvar MovieList =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(MovieList, _PureComponent);\n\n  function MovieList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MovieList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MovieList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      movies: []\n    };\n    return _this;\n  }\n\n  _createClass(MovieList, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // try {\n                //     const res = await fetch('https://api.themoviedb.org/3/discover/movie?api_key=65e043c24785898be00b4abc12fcdaae&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1');\n                //     const movies = await res.json();\n                //     this.setState({\n                //         movies: movies.results,\n                //     });\n                // } catch (e) {\n                //     console.log(e);\n                // }\n                this.props.getMovies();\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(MovieGrid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, this.props.movies.map(function (movie) {\n        return React.createElement(Movie, {\n          key: movie.id,\n          movie: movie,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        });\n      }), \";\");\n    }\n  }]);\n\n  return MovieList;\n}(PureComponent);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    movies: state.greetings.movies\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    getMovies: getMovies\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieList);\nvar MovieGrid = styled.div(_templateObject());","map":{"version":3,"sources":["D:\\NGapBatch - 2\\Training\\Day12\\my-app\\src\\MovieList.js"],"names":["React","PureComponent","styled","Movie","MovieList","state","movies","props","getMovies","map","movie","id","mapStateToProps","greetings","mapDispatchToProps","dispatch","bindActionCreators","connect","MovieGrid","div"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,aAAf,QAAmC,OAAnC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;IAEMC,S;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,MAAM,EAAG;AADL,K;;;;;;;;;;;;;;AAMJ;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAKC,KAAL,CAAWC,SAAX;;;;;;;;;;;;;;;;;;6BAII;AACJ,aACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKD,KAAL,CAAWD,MAAX,CAAkBG,GAAlB,CAAsB,UAAAC,KAAK;AAAA,eACxB,oBAAC,KAAD;AAAO,UAAA,GAAG,EAAEA,KAAK,CAACC,EAAlB;AAAsB,UAAA,KAAK,EAAED,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADwB;AAAA,OAA3B,CADL,MADJ;AAOH;;;;EA9BmBT,a;;AAgCxB,IAAMW,eAAe,GAAG,SAAlBA,eAAkB,CAAAP,KAAK;AAAA,SAAK;AAC9BC,IAAAA,MAAM,EAAGD,KAAK,CAACQ,SAAN,CAAgBP;AADK,GAAL;AAAA,CAA7B;;AAIA,IAAMQ,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAIC,kBAAkB,CAAC;AACtDR,IAAAA,SAAS,EAATA;AADsD,GAAD,EAEvDO,QAFuD,CAAtB;AAAA,CAAnC;;AAIA,eAAeE,OAAO,CAACL,eAAD,EAAiBE,kBAAjB,CAAP,CAA4CV,SAA5C,CAAf;AAIA,IAAMc,SAAS,GAAGhB,MAAM,CAACiB,GAAV,mBAAf","sourcesContent":["import React, {PureComponent} from 'react';\r\nimport styled from 'styled-components';\r\nimport Movie from './Movie'\r\n\r\nclass MovieList extends PureComponent{\r\n    state = {\r\n        movies : []\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        // try {\r\n\r\n        //     const res = await fetch('https://api.themoviedb.org/3/discover/movie?api_key=65e043c24785898be00b4abc12fcdaae&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1');\r\n        //     const movies = await res.json();\r\n\r\n        //     this.setState({\r\n        //         movies: movies.results,\r\n        //     });\r\n        // } catch (e) {\r\n        //     console.log(e);\r\n        // }\r\n        this.props.getMovies()\r\n        \r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <MovieGrid>\r\n                {this.props.movies.map(movie => \r\n                    <Movie key={movie.id} movie={movie} />\r\n                )};\r\n            </MovieGrid>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => ({\r\n    movies : state.greetings.movies\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    getMovies\r\n},dispatch)\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(MovieList);\r\n\r\n\r\n\r\nconst MovieGrid = styled.div`\r\n    display: grid;\r\n    padding : 1rem;\r\n    grid-template-columns : repeat(6,1fr);\r\n    grid-row-gap: 1rem;\r\n`"]},"metadata":{},"sourceType":"module"}