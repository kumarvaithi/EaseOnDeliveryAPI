{"ast":null,"code":"import _classCallCheck from \"D:\\\\NGapBatch - 2\\\\Project\\\\EaseOnDelivery-2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\NGapBatch - 2\\\\Project\\\\EaseOnDelivery-2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\NGapBatch - 2\\\\Project\\\\EaseOnDelivery-2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\NGapBatch - 2\\\\Project\\\\EaseOnDelivery-2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\NGapBatch - 2\\\\Project\\\\EaseOnDelivery-2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\NGapBatch - 2\\\\Project\\\\EaseOnDelivery-2\\\\src\\\\_commons\\\\ComponentProgressBar.js\";\nimport React from \"react\";\nimport \"react-step-progress-bar/styles.css\";\nimport { ProgressBar } from \"react-step-progress-bar\";\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nvar ComponentProgressBar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ComponentProgressBar, _React$Component);\n\n  function ComponentProgressBar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ComponentProgressBar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ComponentProgressBar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      completed: 0,\n      showSuccessPage: false\n    };\n\n    _this.progress = function () {\n      var completed = _this.state.completed;\n\n      if (completed === 100) {\n        _this.setState({\n          completed: 0,\n          showSuccessPage: true\n        });\n      } else {\n        var diff = Math.random() * 10;\n\n        _this.setState({\n          completed: Math.min(completed + diff, 100)\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(ComponentProgressBar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.timer = setInterval(this.progress, 500);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.timer);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(LinearProgress, {\n        variant: \"determinate\",\n        value: this.state.completed,\n        className: \"progress-bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return ComponentProgressBar;\n}(React.Component);\n\nexport default ComponentProgressBar;","map":{"version":3,"sources":["D:\\NGapBatch - 2\\Project\\EaseOnDelivery-2\\src\\_commons\\ComponentProgressBar.js"],"names":["React","ProgressBar","LinearProgress","ComponentProgressBar","state","completed","showSuccessPage","progress","setState","diff","Math","random","min","timer","setInterval","clearInterval","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oCAAP;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAOC,cAAP,MAA2B,kCAA3B;;IAEMC,oB;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,SAAS,EAAE,CADP;AAEJC,MAAAA,eAAe,EAAE;AAFb,K;;UAaNC,Q,GAAW,YAAM;AAAA,UACPF,SADO,GACO,MAAKD,KADZ,CACPC,SADO;;AAEf,UAAIA,SAAS,KAAK,GAAlB,EAAuB;AACrB,cAAKG,QAAL,CAAc;AACVH,UAAAA,SAAS,EAAE,CADD;AAEVC,UAAAA,eAAe,EAAE;AAFP,SAAd;AAID,OALD,MAKO;AACL,YAAMG,IAAI,GAAGC,IAAI,CAACC,MAAL,KAAgB,EAA7B;;AACA,cAAKH,QAAL,CAAc;AAAEH,UAAAA,SAAS,EAAEK,IAAI,CAACE,GAAL,CAASP,SAAS,GAAGI,IAArB,EAA2B,GAA3B;AAAb,SAAd;AACD;AACF,K;;;;;;;wCAnBmB;AAClB,WAAKI,KAAL,GAAaC,WAAW,CAAC,KAAKP,QAAN,EAAgB,GAAhB,CAAxB;AACD;;;2CAEsB;AACrBQ,MAAAA,aAAa,CAAC,KAAKF,KAAN,CAAb;AACD;;;6BAcI;AACP,aACI,oBAAC,cAAD;AAAgB,QAAA,OAAO,EAAC,aAAxB;AAAsC,QAAA,KAAK,EAAE,KAAKT,KAAL,CAAWC,SAAxD;AAAmE,QAAA,SAAS,EAAC,cAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGD;;;;EA9BgCL,KAAK,CAACgB,S;;AAiCzC,eAAeb,oBAAf","sourcesContent":["import React from \"react\";\r\nimport \"react-step-progress-bar/styles.css\";\r\nimport { ProgressBar } from \"react-step-progress-bar\";\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nclass ComponentProgressBar extends React.Component {\r\n    state = {\r\n        completed: 0,\r\n        showSuccessPage: false\r\n      };\r\n    \r\n      componentDidMount() {\r\n        this.timer = setInterval(this.progress, 500);\r\n      }\r\n    \r\n      componentWillUnmount() {\r\n        clearInterval(this.timer);\r\n      }\r\n    \r\n      progress = () => {\r\n        const { completed } = this.state;\r\n        if (completed === 100) {\r\n          this.setState({ \r\n              completed: 0 ,\r\n              showSuccessPage: true\r\n            });\r\n        } else {\r\n          const diff = Math.random() * 10;\r\n          this.setState({ completed: Math.min(completed + diff, 100) });\r\n        }\r\n      };\r\n  render() {\r\n    return (\r\n        <LinearProgress variant=\"determinate\" value={this.state.completed} className=\"progress-bar\"/>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ComponentProgressBar;"]},"metadata":{},"sourceType":"module"}