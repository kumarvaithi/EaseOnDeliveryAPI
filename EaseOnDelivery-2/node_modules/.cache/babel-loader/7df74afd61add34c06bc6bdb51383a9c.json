{"ast":null,"code":"import _classCallCheck from \"D:\\\\NGapBatch - 2\\\\Project\\\\EaseOnDelivery-2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\NGapBatch - 2\\\\Project\\\\EaseOnDelivery-2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\NGapBatch - 2\\\\Project\\\\EaseOnDelivery-2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\NGapBatch - 2\\\\Project\\\\EaseOnDelivery-2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\NGapBatch - 2\\\\Project\\\\EaseOnDelivery-2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\NGapBatch - 2\\\\Project\\\\EaseOnDelivery-2\\\\src\\\\_components\\\\bookingDelivery\\\\RideDetails.js\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TextField from '@material-ui/core/TextField';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Typography from '@material-ui/core/Typography';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport moment from 'moment';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    margin: {\n      margin: theme.spacing.unit\n    },\n    withoutLabel: {\n      marginTop: theme.spacing.unit * 3\n    },\n    textField: {\n      flexBasis: 200\n    },\n    card: {\n      maxWidth: 445\n    }\n  };\n};\n\nvar whenDD = [{\n  value: 'NOW',\n  label: 'NOW'\n}, {\n  value: 'LATER',\n  label: 'DELIVER LATER'\n}];\nvar productTypeDD = [{\n  value: 'HOUSESHIFTING',\n  label: 'HOUSE SHIFTING'\n}, {\n  value: 'OFFICESHIFTING',\n  label: 'OFFICE SHIFTING'\n}, {\n  value: 'FRUITSVEG',\n  label: 'FRUITS/VEGETABLES BAGGAGE'\n}, {\n  value: 'ELECTRONICITEMS',\n  label: 'ELECTRONIC ITEMS'\n}, {\n  value: 'IRONITEMS',\n  label: 'IRON ITEMS'\n}, {\n  value: 'CLOTHES',\n  label: 'CLOTHES'\n}, {\n  value: 'OTHERS',\n  label: 'OTHERS'\n}];\nvar transportModeDD = [{\n  value: 'HOUSESHIFTING',\n  label: 'HOUSE SHIFTING'\n}, {\n  value: 'OFFICESHIFTING',\n  label: 'OFFICE SHIFTING'\n}, {\n  value: 'FRUITSVEG',\n  label: 'FRUITS/VEGETABLES BAGGAGE'\n}, {\n  value: 'ELECTRONICITEMS',\n  label: 'ELECTRONIC ITEMS'\n}, {\n  value: 'IRONITEMS',\n  label: 'IRON ITEMS'\n}, {\n  value: 'CLOTHES',\n  label: 'CLOTHES'\n}, {\n  value: 'OTHERS',\n  label: 'OTHERS'\n}];\n\nvar RideDetails =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(RideDetails, _React$Component);\n\n  function RideDetails() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RideDetails);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RideDetails)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      displayProduct: false\n    };\n\n    _this.continue = function (e) {\n      e.preventDefault();\n\n      _this.props.nextStep();\n    };\n\n    _this.displayProductDetails = function () {\n      _this.setState({\n        displayProduct: true\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(RideDetails, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          handleChange = _this$props.handleChange,\n          values = _this$props.values;\n      var displayProduct = this.state.displayProduct;\n      var formattedDate = moment().format('YYYY-MM-DD');\n      var formattedTime = moment().format('hh:mm');\n      return React.createElement(\"div\", {\n        className: \"boodDeliveryMainDiv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, !displayProduct ? React.createElement(Card, {\n        className: classes.card + \" card \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(CardContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        gutterBottom: true,\n        variant: \"h5\",\n        component: \"h2\",\n        className: \"typography\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Make Delivery Easy\"), React.createElement(Typography, {\n        component: \"p\",\n        className: \"typography1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"Assign delivery to us sit back and relax.\")), React.createElement(TextField, {\n        className: classNames(classes.margin, classes.textField) + \" fields \",\n        label: \"Pick up Location\",\n        placeholder: \"Enter The Pick up Location\" // InputProps={{\n        //     startAdornment: <InputAdornment position=\"start\">PICKUP</InputAdornment>,\n        // }}\n        ,\n        onChange: handleChange('pickup'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        label: \"Drop Location\",\n        placeholder: \"Enter The Drop Location\",\n        className: classNames(classes.margin, classes.textField) + \" fields \" // InputProps={{\n        //     startAdornment: <InputAdornment position=\"start\">DROP</InputAdornment>,\n        // }}\n        ,\n        onChange: handleChange('drop'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        select: true,\n        className: classNames(classes.margin, classes.textField) + \" fields \",\n        value: values.when,\n        label: \"Select When\" // InputProps={{\n        //     startAdornment: <InputAdornment position=\"start\">WHEN</InputAdornment>,\n        // }}\n        ,\n        onChange: handleChange('when'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, whenDD.map(function (option) {\n        return React.createElement(MenuItem, {\n          key: option.value,\n          value: option.value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        }, option.label);\n      })), React.createElement(CardActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(Button, {\n        size: \"small\",\n        color: \"primary\",\n        className: \"button-lg\",\n        onClick: this.displayProductDetails,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, \"FIND NOW\"))) : React.createElement(Card, {\n        className: classes.card + \" card \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        select: true,\n        className: classNames(classes.margin, classes.textField) + \" fields \",\n        value: values.productType,\n        label: \"Choose Product Type\" // InputProps={{\n        //     startAdornment: <InputAdornment position=\"start\">PRODUCT TYPE</InputAdornment>,\n        // }}\n        ,\n        onChange: handleChange('productType'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, productTypeDD.map(function (option) {\n        return React.createElement(MenuItem, {\n          key: option.value,\n          value: option.value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201\n          },\n          __self: this\n        }, option.label);\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }), values.productTypeOthersVisible && React.createElement(TextField, {\n        className: classNames(classes.margin, classes.textField) + \" fields \",\n        label: \"Other Products\",\n        placeholder: \"Enter The Other Products\" // InputProps={{\n        //     startAdornment: <InputAdornment position=\"start\">OTHERS</InputAdornment>,\n        // }}\n        ,\n        onChange: handleChange('otherProducts'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }), values.productTypeOthersVisible && React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        className: classNames(classes.margin, classes.textField) + \" fields \",\n        label: \"Tentative Weight in Kg's\",\n        placeholder: \"Enter the Weight\" // InputProps={{\n        //     startAdornment: <InputAdornment position=\"start\">TENTATIVE WEIGHT</InputAdornment>,\n        //     endAdornment : <InputAdornment position=\"end\">IN KG'S</InputAdornment>,\n        // }}\n        ,\n        onChange: handleChange('tentativeWeight'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        id: \"datetime-local\",\n        label: \"DELIVERY DATE\",\n        type: \"date\",\n        defaultValue: formattedDate,\n        className: classes.manDateTime,\n        InputLabelProps: {\n          shrink: true\n        },\n        onChange: handleChange('deliveryDate'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        id: \"datetime-local\",\n        label: \"DELIVERY TIME \",\n        type: \"time\",\n        defaultValue: formattedTime,\n        className: classes.manDateTime,\n        InputLabelProps: {\n          shrink: true\n        },\n        onChange: handleChange('deliveryTime'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        className: classNames(classes.margin, classes.textField) + \" fields \",\n        label: \"Delivery Person\",\n        placeholder: \"Enter The Delivery Person\" // InputProps={{\n        //     startAdornment: <InputAdornment position=\"start\">DELIVERY PERSON</InputAdornment>,\n        // }}\n        ,\n        onChange: handleChange('deliveryPerson'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        className: classNames(classes.margin, classes.textField) + \" fields \",\n        label: \"Delivery Person Contact No\",\n        placeholder: \"Enter the Delivery Person No\" // InputProps={{\n        //     startAdornment: <InputAdornment position=\"start\">DELIVERY PERSON NO</InputAdornment>,\n        // }}\n        ,\n        onChange: handleChange('deliveryPersonNO'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }), React.createElement(CardActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, React.createElement(Button, {\n        size: \"small\",\n        color: \"primary\",\n        className: \"button-lg\",\n        onClick: this.continue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, \"CONTINUE\")))));\n    }\n  }]);\n\n  return RideDetails;\n}(React.Component);\n\nRideDetails.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(RideDetails);","map":{"version":3,"sources":["D:\\NGapBatch - 2\\Project\\EaseOnDelivery-2\\src\\_components\\bookingDelivery\\RideDetails.js"],"names":["React","classNames","PropTypes","withStyles","InputAdornment","TextField","Card","CardActionArea","CardActions","CardContent","Button","MenuItem","Typography","connect","bindActionCreators","moment","styles","theme","root","display","flexWrap","margin","spacing","unit","withoutLabel","marginTop","textField","flexBasis","card","maxWidth","whenDD","value","label","productTypeDD","transportModeDD","RideDetails","state","displayProduct","continue","e","preventDefault","props","nextStep","displayProductDetails","setState","classes","handleChange","values","formattedDate","format","formattedTime","when","map","option","productType","productTypeOthersVisible","manDateTime","shrink","Component","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {connect} from 'react-redux'\r\nimport {bindActionCreators} from 'redux'\r\nimport moment from 'moment';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  margin: {\r\n    margin: theme.spacing.unit,\r\n  },\r\n  withoutLabel: {\r\n    marginTop: theme.spacing.unit * 3,\r\n  },\r\n  textField: {\r\n    flexBasis: 200,\r\n  },\r\n  card: {\r\n    maxWidth: 445,\r\n  },\r\n  \r\n});\r\n\r\nconst whenDD = [\r\n  {\r\n    value: 'NOW',\r\n    label: 'NOW',\r\n  },\r\n  {\r\n    value: 'LATER',\r\n    label: 'DELIVER LATER',\r\n  },\r\n];\r\n\r\nconst productTypeDD = [\r\n  {\r\n    value: 'HOUSESHIFTING',\r\n    label: 'HOUSE SHIFTING',\r\n  },\r\n  {\r\n    value: 'OFFICESHIFTING',\r\n    label: 'OFFICE SHIFTING',\r\n  },\r\n  {\r\n    value: 'FRUITSVEG',\r\n    label: 'FRUITS/VEGETABLES BAGGAGE',\r\n  },\r\n  {\r\n    value: 'ELECTRONICITEMS',\r\n    label: 'ELECTRONIC ITEMS',\r\n  },\r\n  {\r\n    value: 'IRONITEMS',\r\n    label: 'IRON ITEMS',\r\n  },\r\n  {\r\n    value: 'CLOTHES',\r\n    label: 'CLOTHES',\r\n  },\r\n  {\r\n    value: 'OTHERS',\r\n    label: 'OTHERS',\r\n  },\r\n];\r\n\r\nconst transportModeDD = [\r\n  {\r\n    value: 'HOUSESHIFTING',\r\n    label: 'HOUSE SHIFTING',\r\n  },\r\n  {\r\n    value: 'OFFICESHIFTING',\r\n    label: 'OFFICE SHIFTING',\r\n  },\r\n  {\r\n    value: 'FRUITSVEG',\r\n    label: 'FRUITS/VEGETABLES BAGGAGE',\r\n  },\r\n  {\r\n    value: 'ELECTRONICITEMS',\r\n    label: 'ELECTRONIC ITEMS',\r\n  },\r\n  {\r\n    value: 'IRONITEMS',\r\n    label: 'IRON ITEMS',\r\n  },\r\n  {\r\n    value: 'CLOTHES',\r\n    label: 'CLOTHES',\r\n  },\r\n  {\r\n    value: 'OTHERS',\r\n    label: 'OTHERS',\r\n  },\r\n];\r\n\r\nclass RideDetails extends React.Component {\r\n  state = {\r\n    displayProduct : false\r\n  }\r\n  continue = e => {\r\n    e.preventDefault();\r\n    this.props.nextStep();\r\n  }\r\n\r\n  displayProductDetails = () => {\r\n    this.setState({\r\n      displayProduct : true\r\n    })\r\n  }\r\n  render() {\r\n    const { classes,handleChange,values} = this.props;\r\n    const {displayProduct} = this.state\r\n    const formattedDate = moment().format('YYYY-MM-DD');\r\n    const formattedTime = moment().format('hh:mm')\r\n    return (\r\n      <div className={\"boodDeliveryMainDiv\"}>\r\n\r\n        <div className = {classes.root}>\r\n        {!displayProduct ? (\r\n          <Card className={classes.card + \" card \"}>\r\n          <CardContent >\r\n              <Typography gutterBottom variant=\"h5\" component=\"h2\" className={\"typography\"}>\r\n                  Make Delivery Easy\r\n              </Typography>\r\n              <Typography component=\"p\" className=\"typography1\">\r\n                  Assign delivery to us sit back and relax.\r\n              </Typography>\r\n          </CardContent>\r\n              <TextField\r\n              className={classNames(classes.margin, classes.textField) + \" fields \"}\r\n              label=\"Pick up Location\"\r\n              placeholder = \"Enter The Pick up Location\"\r\n              // InputProps={{\r\n              //     startAdornment: <InputAdornment position=\"start\">PICKUP</InputAdornment>,\r\n              // }}\r\n              onChange = {handleChange('pickup')}\r\n              />\r\n              <br/>\r\n              <TextField\r\n              label=\"Drop Location\"\r\n              placeholder = \"Enter The Drop Location\"\r\n              className={classNames(classes.margin, classes.textField) + \" fields \"}\r\n              // InputProps={{\r\n              //     startAdornment: <InputAdornment position=\"start\">DROP</InputAdornment>,\r\n              // }}\r\n              onChange = {handleChange('drop')}\r\n              />\r\n              <br/>\r\n              <TextField\r\n              select\r\n              className={classNames(classes.margin, classes.textField) + \" fields \"}\r\n              value={values.when}\r\n              label=\"Select When\"\r\n              // InputProps={{\r\n              //     startAdornment: <InputAdornment position=\"start\">WHEN</InputAdornment>,\r\n              // }}\r\n              onChange = {handleChange('when')}\r\n              >\r\n              {whenDD.map(option => (\r\n                  <MenuItem key={option.value} value={option.value}>\r\n                  {option.label}\r\n                  </MenuItem>\r\n              ))}\r\n              </TextField>\r\n          <CardActions>\r\n              <Button size=\"small\" color=\"primary\" className=\"button-lg\" \r\n                onClick = {this.displayProductDetails}>\r\n                  FIND NOW\r\n              </Button>\r\n          </CardActions>\r\n        </Card>\r\n        ) : (\r\n          <Card className={classes.card + \" card \"}>\r\n        <TextField\r\n          select\r\n          className={classNames(classes.margin, classes.textField) + \" fields \"}\r\n          value={values.productType}\r\n          label=\"Choose Product Type\"\r\n          // InputProps={{\r\n          //     startAdornment: <InputAdornment position=\"start\">PRODUCT TYPE</InputAdornment>,\r\n          // }}\r\n          onChange = {handleChange('productType')}\r\n          >\r\n          \r\n          {productTypeDD.map(option => (\r\n              <MenuItem key={option.value} value={option.value}>\r\n              {option.label}\r\n              </MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <br />\r\n        {values.productTypeOthersVisible &&\r\n            <TextField\r\n            className={classNames(classes.margin, classes.textField) + \" fields \"}\r\n            label = \"Other Products\"\r\n            placeholder = \"Enter The Other Products\"\r\n            // InputProps={{\r\n            //     startAdornment: <InputAdornment position=\"start\">OTHERS</InputAdornment>,\r\n            // }}\r\n            onChange = {handleChange('otherProducts')}\r\n            />\r\n        }\r\n        {values.productTypeOthersVisible &&\r\n          <br/>\r\n        }\r\n        <TextField\r\n        className={classNames(classes.margin, classes.textField) + \" fields \"}\r\n        label =\"Tentative Weight in Kg's\"\r\n        placeholder = \"Enter the Weight\"\r\n        // InputProps={{\r\n        //     startAdornment: <InputAdornment position=\"start\">TENTATIVE WEIGHT</InputAdornment>,\r\n        //     endAdornment : <InputAdornment position=\"end\">IN KG'S</InputAdornment>,\r\n        // }}\r\n        onChange = {handleChange('tentativeWeight')}\r\n        />\r\n        {/* <TextField\r\n          select\r\n          className={classNames(classes.margin, classes.textField) + \" fields \"}\r\n          value={values.productType}\r\n          InputProps={{\r\n              startAdornment: <InputAdornment position=\"start\">MODE OF TRANSPORT</InputAdornment>,\r\n          }}\r\n          onChange = {handleChange('productType')}\r\n          >\r\n          \r\n          {transportModeDD.map(option => (\r\n              <MenuItem key={option.value} value={option.value}>\r\n              {option.label}\r\n              </MenuItem>\r\n          ))}\r\n        </TextField> */}\r\n        <TextField\r\n          id=\"datetime-local\"\r\n          label=\"DELIVERY DATE\"\r\n          type=\"date\"\r\n          defaultValue={formattedDate}\r\n          className={classes.manDateTime}\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          onChange = {handleChange('deliveryDate')}\r\n        />\r\n        <TextField\r\n          id=\"datetime-local\"\r\n          label=\"DELIVERY TIME \"\r\n          type=\"time\"\r\n          defaultValue={formattedTime}\r\n          className={classes.manDateTime}\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          onChange = {handleChange('deliveryTime')}\r\n        />\r\n        <TextField\r\n          className={classNames(classes.margin, classes.textField) + \" fields \"}\r\n          label = \"Delivery Person\"\r\n          placeholder = \"Enter The Delivery Person\"\r\n          // InputProps={{\r\n          //     startAdornment: <InputAdornment position=\"start\">DELIVERY PERSON</InputAdornment>,\r\n          // }}\r\n          onChange = {handleChange('deliveryPerson')}\r\n        />\r\n        <TextField\r\n          className={classNames(classes.margin, classes.textField) + \" fields \"}\r\n          label = \"Delivery Person Contact No\"\r\n          placeholder = \"Enter the Delivery Person No\"\r\n          // InputProps={{\r\n          //     startAdornment: <InputAdornment position=\"start\">DELIVERY PERSON NO</InputAdornment>,\r\n          // }}\r\n          onChange = {handleChange('deliveryPersonNO')}\r\n        />\r\n        <CardActions>\r\n            <Button size=\"small\" color=\"primary\" className=\"button-lg\" \r\n              onClick = {this.continue}>\r\n                CONTINUE\r\n            </Button>\r\n        </CardActions>\r\n      </Card>\r\n        )}\r\n        \r\n        </div>\r\n      </div>  \r\n    );\r\n  }\r\n}\r\n\r\nRideDetails.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(RideDetails)"]},"metadata":{},"sourceType":"module"}