{"ast":null,"code":"import _classCallCheck from \"D:\\\\NGapBatch - 2\\\\Project\\\\EaseOnDelivery-2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\NGapBatch - 2\\\\Project\\\\EaseOnDelivery-2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\NGapBatch - 2\\\\Project\\\\EaseOnDelivery-2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\NGapBatch - 2\\\\Project\\\\EaseOnDelivery-2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\NGapBatch - 2\\\\Project\\\\EaseOnDelivery-2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\NGapBatch - 2\\\\Project\\\\EaseOnDelivery-2\\\\src\\\\_components\\\\bookingDelivery\\\\BookingConfirmation.js\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TextField from '@material-ui/core/TextField';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Typography from '@material-ui/core/Typography';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport moment from 'moment';\nimport List from '@material-ui/core/List';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    margin: {\n      margin: theme.spacing.unit\n    },\n    withoutLabel: {\n      marginTop: theme.spacing.unit * 3\n    },\n    textField: {\n      flexBasis: 200\n    },\n    card: {\n      maxWidth: 445\n    },\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    manDateTime: {\n      marginLeft: theme.spacing.unit,\n      marginRight: theme.spacing.unit,\n      width: 200\n    }\n  };\n};\n\nvar paymentModeDD = [{\n  value: 'CASH',\n  label: 'CASH ON DELIVERY'\n}];\n\nvar BookingConfirmation =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BookingConfirmation, _React$Component);\n\n  function BookingConfirmation() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BookingConfirmation);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BookingConfirmation)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isPaymentModeSelected: false\n    };\n\n    _this.continue = function (e) {\n      e.preventDefault();\n\n      _this.props.nextStep();\n    };\n\n    _this.handlePaymentMode = function () {\n      _this.props.handleChange('paymentMode'); // this.selectPaymentMode();\n\n    };\n\n    _this.selectPaymentMode = function () {\n      _this.setState(function (state) {\n        return {\n          isPaymentModeSelected: !_this.state.isPaymentModeSelected\n        };\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(BookingConfirmation, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          handleChange = _this$props.handleChange,\n          values = _this$props.values; // const handlePaymentMode = handlePaymentMode();\n\n      console.log(\"isPaymentModeSelected : \" + this.state.isPaymentModeSelected);\n      return React.createElement(\"div\", {\n        className: classes.root + \" boodDeliveryMainDiv \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, !this.state.isPaymentModeSelected && React.createElement(Card, {\n        className: classes.card + \" largeCard \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        component: \"h4\",\n        variant: \"h6\",\n        gutterBottom: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Approximate Delivery Charge : 1000 INR.\"), React.createElement(TextField, {\n        select: true,\n        className: classNames(classes.margin, classes.textField) + \" confirmFields \",\n        value: values.paymentMode,\n        label: \"Payment Mode\" // InputProps={{\n        //     startAdornment: <InputAdornment position=\"start\">PAYMENT MODE</InputAdornment>,\n        // }}\n        ,\n        onChange: this.handlePaymentMode(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, paymentModeDD.map(function (option) {\n        return React.createElement(MenuItem, {\n          key: option.value,\n          value: option.value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, option.label);\n      }))));\n    }\n  }]);\n\n  return BookingConfirmation;\n}(React.Component);\n\nBookingConfirmation.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(BookingConfirmation);","map":{"version":3,"sources":["D:\\NGapBatch - 2\\Project\\EaseOnDelivery-2\\src\\_components\\bookingDelivery\\BookingConfirmation.js"],"names":["React","classNames","PropTypes","withStyles","InputAdornment","TextField","Card","CardActionArea","CardActions","CardContent","Button","MenuItem","Typography","connect","bindActionCreators","moment","List","ListItemText","styles","theme","root","display","flexWrap","margin","spacing","unit","withoutLabel","marginTop","textField","flexBasis","card","maxWidth","container","manDateTime","marginLeft","marginRight","width","paymentModeDD","value","label","BookingConfirmation","state","isPaymentModeSelected","continue","e","preventDefault","props","nextStep","handlePaymentMode","handleChange","selectPaymentMode","setState","classes","values","console","log","paymentMode","map","option","Component","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {connect} from 'react-redux'\r\nimport {bindActionCreators} from 'redux'\r\nimport moment from 'moment';\r\nimport List from '@material-ui/core/List';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  margin: {\r\n    margin: theme.spacing.unit,\r\n  },\r\n  withoutLabel: {\r\n    marginTop: theme.spacing.unit * 3,\r\n  },\r\n  textField: {\r\n    flexBasis: 200,\r\n  },\r\n  card: {\r\n    maxWidth: 445,\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  manDateTime: {\r\n    marginLeft: theme.spacing.unit,\r\n    marginRight: theme.spacing.unit,\r\n    width: 200,\r\n  },\r\n  \r\n});\r\n\r\nconst paymentModeDD = [\r\n  {\r\n    value: 'CASH',\r\n    label: 'CASH ON DELIVERY',\r\n  },\r\n  // {\r\n  //   value: 'CREDIT CARD',\r\n  //   label: 'CREDIT CARD',\r\n  // },\r\n  // {\r\n  //   value: 'DEBIT CARD',\r\n  //   label: 'DEBIT CARD',\r\n  // },\r\n];\r\n\r\nclass BookingConfirmation extends React.Component {\r\n  state = {\r\n    isPaymentModeSelected : false\r\n  }\r\n  continue = e => {\r\n    e.preventDefault();\r\n    this.props.nextStep();\r\n  }\r\n\r\n  handlePaymentMode = () =>{\r\n    this.props.handleChange('paymentMode');\r\n    // this.selectPaymentMode();\r\n  }\r\n\r\n  selectPaymentMode = () => {\r\n    this.setState(state => ({\r\n      isPaymentModeSelected : !this.state.isPaymentModeSelected\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { classes,handleChange,values} = this.props;\r\n    // const handlePaymentMode = handlePaymentMode();\r\n    console.log(\"isPaymentModeSelected : \" + this.state.isPaymentModeSelected)\r\n    return (\r\n        \r\n      <div className = {classes.root + \" boodDeliveryMainDiv \"}>      \r\n        {!this.state.isPaymentModeSelected && (\r\n          <Card className={classes.card + \" largeCard \"}>    \r\n            <Typography component=\"h4\" variant=\"h6\" gutterBottom>\r\n              Approximate Delivery Charge : 1000 INR. \r\n            </Typography>\r\n          \r\n            <TextField\r\n              select\r\n              className={classNames(classes.margin, classes.textField) + \" confirmFields \"}\r\n              value={values.paymentMode}\r\n              label = \"Payment Mode\"\r\n              // InputProps={{\r\n              //     startAdornment: <InputAdornment position=\"start\">PAYMENT MODE</InputAdornment>,\r\n              // }}\r\n              onChange = {this.handlePaymentMode()}\r\n              >\r\n              {paymentModeDD.map(option => (\r\n                  <MenuItem key={option.value} value={option.value}>\r\n                  {option.label}\r\n                  </MenuItem>\r\n              ))}\r\n            </TextField>\r\n          </Card>\r\n        )}\r\n        {/* {this.state.isPaymentModeSelected &&(\r\n          <div>\r\n            <List>\r\n              <br/>\r\n              <ListItemText className={\" listItemReceipt \"} primary=\"Pick Up\" secondary={values.pickup} />\r\n              <ListItemText className={\" listItemReceipt \"} primary=\"Drop\" secondary={values.drop} />\r\n              <ListItemText className={\" listItemReceipt \"} primary=\"When\" secondary={values.when} />\r\n              <ListItemText className={\" listItemReceipt \"} primary=\"Product Type\" secondary={values.productType} />\r\n              {this.props.productTypeOthersVisible &&\r\n                  <ListItemText className={\" listItemReceipt \"} primary=\"Other Product\" secondary={values.otherProducts} />\r\n              }\r\n              <ListItemText className={\" listItemReceipt \"} primary=\"Tentative Weight\" secondary={values.tentativeWeight} />\r\n              <ListItemText className={\" listItemReceipt \"} primary=\"Delivery Date\" secondary={values.deliveryDate + values.deliveryTime} />\r\n              <ListItemText className={\" listItemReceipt \"} primary=\"Delivey Person\" secondary={values.deliveryPerson} />\r\n              <ListItemText className={\" listItemReceipt \"} primary=\"Delivery Person No\" secondary={values.deliveryPersonNO} />\r\n              <ListItemText className={\" listItemReceipt \"} primary=\"Payment Mode\" secondary={values.paymentMode} />\r\n            </List>\r\n\r\n            <CardActions className={\" confirmButtonAction \"}>\r\n                <Button size=\"small\" color=\"primary\" className=\"button-sm\" \r\n                  onClick = {this.continue}>\r\n                    CONFIRM BOOKING\r\n                </Button>\r\n            </CardActions>\r\n          </div>\r\n        )} */}\r\n\r\n          \r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nBookingConfirmation.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(BookingConfirmation)"]},"metadata":{},"sourceType":"module"}