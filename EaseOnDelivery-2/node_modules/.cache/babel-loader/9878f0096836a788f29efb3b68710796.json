{"ast":null,"code":"import _classCallCheck from \"D:\\\\NGapBatch - 2\\\\Project\\\\EaseOnDelivery-2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\NGapBatch - 2\\\\Project\\\\EaseOnDelivery-2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\NGapBatch - 2\\\\Project\\\\EaseOnDelivery-2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\NGapBatch - 2\\\\Project\\\\EaseOnDelivery-2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\NGapBatch - 2\\\\Project\\\\EaseOnDelivery-2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\NGapBatch - 2\\\\Project\\\\EaseOnDelivery-2\\\\src\\\\_components\\\\bookingDelivery\\\\LinearBuffer.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nvar styles = {\n  root: {\n    flexGrow: 1\n  }\n};\n\nvar LinearBuffer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(LinearBuffer, _React$Component);\n\n  function LinearBuffer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LinearBuffer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LinearBuffer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      completed: 0,\n      buffer: 10\n    };\n\n    _this.progress = function () {\n      var completed = _this.state.completed;\n\n      if (completed > 100) {\n        _this.setState({\n          completed: 0,\n          buffer: 10\n        });\n      } else {\n        var diff = Math.random() * 10;\n        var diff2 = Math.random() * 10;\n\n        _this.setState({\n          completed: completed + diff,\n          buffer: completed + diff + diff2\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(LinearBuffer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.timer = setInterval(this.progress, 500);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.timer);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      var _this$state = this.state,\n          completed = _this$state.completed,\n          buffer = _this$state.buffer;\n      return React.createElement(\"div\", {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(LinearProgress, {\n        variant: \"buffer\",\n        value: completed,\n        valueBuffer: buffer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), React.createElement(LinearProgress, {\n        color: \"secondary\",\n        variant: \"buffer\",\n        value: completed,\n        valueBuffer: buffer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return LinearBuffer;\n}(React.Component);\n\nLinearBuffer.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(LinearBuffer);","map":{"version":3,"sources":["D:\\NGapBatch - 2\\Project\\EaseOnDelivery-2\\src\\_components\\bookingDelivery\\LinearBuffer.js"],"names":["React","PropTypes","withStyles","LinearProgress","styles","root","flexGrow","LinearBuffer","state","completed","buffer","progress","setState","diff","Math","random","diff2","timer","setInterval","clearInterval","classes","props","Component","propTypes","object","isRequired"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AAEA,IAAMC,MAAM,GAAG;AACbC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE;AADN;AADO,CAAf;;IAMMC,Y;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,SAAS,EAAE,CADL;AAENC,MAAAA,MAAM,EAAE;AAFF,K;;UAaRC,Q,GAAW,YAAM;AAAA,UACPF,SADO,GACO,MAAKD,KADZ,CACPC,SADO;;AAEf,UAAIA,SAAS,GAAG,GAAhB,EAAqB;AACnB,cAAKG,QAAL,CAAc;AAAEH,UAAAA,SAAS,EAAE,CAAb;AAAgBC,UAAAA,MAAM,EAAE;AAAxB,SAAd;AACD,OAFD,MAEO;AACL,YAAMG,IAAI,GAAGC,IAAI,CAACC,MAAL,KAAgB,EAA7B;AACA,YAAMC,KAAK,GAAGF,IAAI,CAACC,MAAL,KAAgB,EAA9B;;AACA,cAAKH,QAAL,CAAc;AAAEH,UAAAA,SAAS,EAAEA,SAAS,GAAGI,IAAzB;AAA+BH,UAAAA,MAAM,EAAED,SAAS,GAAGI,IAAZ,GAAmBG;AAA1D,SAAd;AACD;AACF,K;;;;;;;wCAjBmB;AAClB,WAAKC,KAAL,GAAaC,WAAW,CAAC,KAAKP,QAAN,EAAgB,GAAhB,CAAxB;AACD;;;2CAEsB;AACrBQ,MAAAA,aAAa,CAAC,KAAKF,KAAN,CAAb;AACD;;;6BAaQ;AAAA,UACCG,OADD,GACa,KAAKC,KADlB,CACCD,OADD;AAAA,wBAEuB,KAAKZ,KAF5B;AAAA,UAECC,SAFD,eAECA,SAFD;AAAA,UAEYC,MAFZ,eAEYA,MAFZ;AAGP,aACE;AAAK,QAAA,SAAS,EAAEU,OAAO,CAACf,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,cAAD;AAAgB,QAAA,OAAO,EAAC,QAAxB;AAAiC,QAAA,KAAK,EAAEI,SAAxC;AAAmD,QAAA,WAAW,EAAEC,MAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,oBAAC,cAAD;AAAgB,QAAA,KAAK,EAAC,WAAtB;AAAkC,QAAA,OAAO,EAAC,QAA1C;AAAmD,QAAA,KAAK,EAAED,SAA1D;AAAqE,QAAA,WAAW,EAAEC,MAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CADF;AAOD;;;;EAnCwBV,KAAK,CAACsB,S;;AAsCjCf,YAAY,CAACgB,SAAb,GAAyB;AACvBH,EAAAA,OAAO,EAAEnB,SAAS,CAACuB,MAAV,CAAiBC;AADH,CAAzB;AAIA,eAAevB,UAAU,CAACE,MAAD,CAAV,CAAmBG,YAAnB,CAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n};\r\n\r\nclass LinearBuffer extends React.Component {\r\n  state = {\r\n    completed: 0,\r\n    buffer: 10,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.timer = setInterval(this.progress, 500);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timer);\r\n  }\r\n\r\n  progress = () => {\r\n    const { completed } = this.state;\r\n    if (completed > 100) {\r\n      this.setState({ completed: 0, buffer: 10 });\r\n    } else {\r\n      const diff = Math.random() * 10;\r\n      const diff2 = Math.random() * 10;\r\n      this.setState({ completed: completed + diff, buffer: completed + diff + diff2 });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { completed, buffer } = this.state;\r\n    return (\r\n      <div className={classes.root}>\r\n        <LinearProgress variant=\"buffer\" value={completed} valueBuffer={buffer} />\r\n        <br />\r\n        <LinearProgress color=\"secondary\" variant=\"buffer\" value={completed} valueBuffer={buffer} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLinearBuffer.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(LinearBuffer);"]},"metadata":{},"sourceType":"module"}