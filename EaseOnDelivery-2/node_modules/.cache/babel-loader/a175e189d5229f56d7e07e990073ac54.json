{"ast":null,"code":"import _classCallCheck from \"d:\\\\NGapBatch - 2\\\\Training\\\\Day9\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"d:\\\\NGapBatch - 2\\\\Training\\\\Day9\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"d:\\\\NGapBatch - 2\\\\Training\\\\Day9\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"d:\\\\NGapBatch - 2\\\\Training\\\\Day9\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"d:\\\\NGapBatch - 2\\\\Training\\\\Day9\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"d:\\\\NGapBatch - 2\\\\Training\\\\Day9\\\\my-app\\\\src\\\\Component\\\\P0.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport fetchPopularRepos from '../utils/api';\n\nvar SelectLanguage = function SelectLanguage(_ref) {\n  var selectedLanguae = _ref.selectedLanguae,\n      onSelect = _ref.onSelect;\n  // const SelectLanguage = ({selectedLanguae})=>{\n  var langauges = ['ALL', 'JS', 'CSS', 'RUBY', 'JAVA'];\n  return React.createElement(\"ul\", {\n    className: \"language\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, langauges.map(function (lang) {\n    return React.createElement(\"li\", {\n      style: lang === selectedLanguae ? {\n        color: '#fff'\n      } : null,\n      onClick: function onClick() {\n        return onSelect(lang);\n      },\n      key: lang,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, lang));\n  }));\n}; // {repos.map(({name,stargazers_count,owner,html_url},index)=>(\n\n\nfunction ReportGrid(props) {\n  var repos = props.repos;\n  return React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, repos.map(function (_ref2) {\n    var name = _ref2.name,\n        owner = _ref2.owner;\n    return React.createElement(\"li\", {\n      key: name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, name, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: owner.avatar_url,\n      alt: 'Avator for ' + owner.login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }))));\n  }));\n} // SelectLanguage.propTypes = {\n//     selectedLanguae : PropTypes.string.isRequired,\n//     onSelect : PropTypes.func.isRequired\n// }\n\n\nvar P0 =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(P0, _Component);\n\n  function P0() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, P0);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(P0)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      selectedLanguae: 'ALL',\n      repos: null\n    };\n\n    _this.updateLanguage = function (lang) {\n      _this.setState(function () {\n        return {\n          selectedLanguae: lang,\n          repos: null\n        };\n      });\n\n      fetchPopularRepos(lang).then(function (repos) {\n        _this.setState(function () {\n          return {\n            repos: repos\n          };\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(P0, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateLanguage(this.state.selectedLanguae);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, !this.state.repos ? React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"time taken to load api from git\") : React.createElement(ReportGrid, {\n        repos: this.state.repos,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return P0;\n}(Component);\n\nexport default P0;","map":{"version":3,"sources":["d:\\NGapBatch - 2\\Training\\Day9\\my-app\\src\\Component\\P0.js"],"names":["React","Component","PropTypes","fetchPopularRepos","SelectLanguage","selectedLanguae","onSelect","langauges","map","lang","color","ReportGrid","props","repos","name","owner","avatar_url","login","P0","state","updateLanguage","setState","then"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,iBAAP,MAA8B,cAA9B;;AACA,IAAMC,cAAc,GAAE,SAAhBA,cAAgB,OAA8B;AAAA,MAA5BC,eAA4B,QAA5BA,eAA4B;AAAA,MAAZC,QAAY,QAAZA,QAAY;AACpD;AACI,MAAMC,SAAS,GAAG,CAAC,KAAD,EAAO,IAAP,EAAY,KAAZ,EAAkB,MAAlB,EAAyB,MAAzB,CAAlB;AACA,SACI;AAAI,IAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,SAAS,CAACC,GAAV,CAAc,UAACC,IAAD;AAAA,WACX;AAAI,MAAA,KAAK,EAAIA,IAAI,KAAKJ,eAAT,GAA2B;AAACK,QAAAA,KAAK,EAAG;AAAT,OAA3B,GAA6C,IAA1D;AACI,MAAA,OAAO,EAAI;AAAA,eAAMJ,QAAQ,CAACG,IAAD,CAAd;AAAA,OADf;AAEI,MAAA,GAAG,EAAEA,IAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIA,IAAJ,CAJJ,CADW;AAAA,GAAd,CADL,CADJ;AAYH,CAfD,C,CAgBA;;;AACA,SAASE,UAAT,CAAoBC,KAApB,EAA0B;AAAA,MACfC,KADe,GACND,KADM,CACfC,KADe;AAEtB,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKA,KAAK,CAACL,GAAN,CAAU;AAAA,QAAEM,IAAF,SAAEA,IAAF;AAAA,QAAOC,KAAP,SAAOA,KAAP;AAAA,WACP;AAAI,MAAA,GAAG,EAAID,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkBA,IAAlB,EACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,GAAG,EAAEC,KAAK,CAACC,UAAhB;AACI,MAAA,GAAG,EAAE,gBAAgBD,KAAK,CAACE,KAD/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CADJ,CADO;AAAA,GAAV,CAFL,CADJ;AAgBH,C,CACD;AACA;AACA;AAEA;;;IACMC,E;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJd,MAAAA,eAAe,EAAG,KADd;AAEJQ,MAAAA,KAAK,EAAG;AAFJ,K;;UASRO,c,GAAiB,UAACX,IAAD,EAAQ;AACrB,YAAKY,QAAL,CAAc,YAAI;AACd,eAAM;AACFhB,UAAAA,eAAe,EAAGI,IADhB;AAEFI,UAAAA,KAAK,EAAG;AAFN,SAAN;AAIH,OALD;;AAMAV,MAAAA,iBAAiB,CAACM,IAAD,CAAjB,CACCa,IADD,CACM,UAACT,KAAD,EAAU;AACZ,cAAKQ,QAAL,CAAc,YAAI;AACd,iBAAM;AACFR,YAAAA,KAAK,EAACA;AADJ,WAAN;AAGH,SAJD;AAKH,OAPD;AAQH,K;;;;;;;wCAnBkB;AACf,WAAKO,cAAL,CAAoB,KAAKD,KAAL,CAAWd,eAA/B;AACH;;;6BAkBO;AACJ,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKK,CAAC,KAAKc,KAAL,CAAWN,KAAZ,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CADD,GAEA,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAG,KAAKM,KAAL,CAAWN,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPL,CADJ;AAaH;;;;EAxCYZ,S;;AA4CjB,eAAeiB,EAAf","sourcesContent":["import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport fetchPopularRepos from '../utils/api'\r\nconst SelectLanguage =({selectedLanguae,onSelect})=>{\r\n// const SelectLanguage = ({selectedLanguae})=>{\r\n    const langauges = ['ALL','JS','CSS','RUBY','JAVA']\r\n    return(\r\n        <ul className=\"language\">\r\n            {langauges.map((lang) => (\r\n                <li style = {lang === selectedLanguae ? {color : '#fff'}: null}  \r\n                    onClick = {() => onSelect(lang)}\r\n                    key={lang}\r\n                >\r\n                    <a>{lang}</a>\r\n                </li> \r\n            ))}\r\n        </ul>\r\n    )\r\n}\r\n// {repos.map(({name,stargazers_count,owner,html_url},index)=>(\r\nfunction ReportGrid(props){\r\n    const {repos} = props\r\n    return(\r\n        <ul>\r\n            \r\n            {repos.map(({name,owner})=>(                \r\n                <li key = {name}>{name}\r\n                    <ul>\r\n                        <li>\r\n                            <img src={owner.avatar_url} \r\n                                alt={'Avator for ' + owner.login}\r\n                            />\r\n                        </li>\r\n                    </ul>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    )\r\n}\r\n// SelectLanguage.propTypes = {\r\n//     selectedLanguae : PropTypes.string.isRequired,\r\n//     onSelect : PropTypes.func.isRequired\r\n\r\n// }\r\nclass P0 extends Component{\r\n    state = {\r\n        selectedLanguae : 'ALL',\r\n        repos : null\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.updateLanguage(this.state.selectedLanguae)\r\n    }\r\n\r\n    updateLanguage = (lang)=>{\r\n        this.setState(()=>{\r\n            return{\r\n                selectedLanguae : lang,\r\n                repos : null\r\n            }\r\n        });\r\n        fetchPopularRepos(lang)\r\n        .then((repos) =>{\r\n            this.setState(()=>{\r\n                return{\r\n                    repos:repos\r\n                }\r\n            });\r\n        })\r\n    }\r\n    render(){        \r\n        return(\r\n            <div>\r\n                {/* {<SelectLanguage \r\n                    selectedLanguae = {this.state.selectedLanguae}\r\n                    onSelect = {this.updateLanguage}\r\n                />} */}\r\n                {!this.state.repos\r\n                ? <p>time taken to load api from git</p>\r\n                :<ReportGrid repos ={this.state.repos}/>}\r\n                \r\n            </div>\r\n        )\r\n        \r\n    }\r\n    \r\n}\r\n\r\nexport default P0;"]},"metadata":{},"sourceType":"module"}