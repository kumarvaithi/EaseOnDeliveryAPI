{"ast":null,"code":"import _taggedTemplateLiteral from \"d:\\\\NGapBatch - 2\\\\Training\\\\Day13\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nimport _regeneratorRuntime from \"d:\\\\NGapBatch - 2\\\\Training\\\\Day13\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"d:\\\\NGapBatch - 2\\\\Training\\\\Day13\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"d:\\\\NGapBatch - 2\\\\Training\\\\Day13\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"d:\\\\NGapBatch - 2\\\\Training\\\\Day13\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"d:\\\\NGapBatch - 2\\\\Training\\\\Day13\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"d:\\\\NGapBatch - 2\\\\Training\\\\Day13\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"d:\\\\NGapBatch - 2\\\\Training\\\\Day13\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"d:\\\\NGapBatch - 2\\\\Training\\\\Day13\\\\my-app\\\\src\\\\movies\\\\MovieList.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    display: grid;\\n    padding : 1rem;\\n    grid-template-columns : repeat(6,1fr);\\n    grid-row-gap: 1rem;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { PureComponent } from 'react';\nimport styled from 'styled-components';\nimport Movie from './Movie';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { getMovies } from './actions';\n\nvar MovieList =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(MovieList, _PureComponent);\n\n  function MovieList() {\n    _classCallCheck(this, MovieList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MovieList).apply(this, arguments));\n  }\n\n  _createClass(MovieList, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this$props, isMoviesLoaded, getMovies;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this$props = this.props, isMoviesLoaded = _this$props.isMoviesLoaded, getMovies = _this$props.getMovies;\n\n                if (!isMoviesLoaded) {\n                  getMovies();\n                }\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(\" \" + this.props);\n      return React.createElement(MovieGrid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, this.props.movies.map(function (movie) {\n        return React.createElement(Movie, {\n          key: movie.id,\n          movie: movie,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        });\n      }), \";\");\n    }\n  }]);\n\n  return MovieList;\n}(PureComponent);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    movies: state.movies.movies,\n    isMoviesLoaded: state.movies.isMoviesLoaded\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    getMovies: getMovies\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieList);\nvar MovieGrid = styled.div(_templateObject());","map":{"version":3,"sources":["d:\\NGapBatch - 2\\Training\\Day13\\my-app\\src\\movies\\MovieList.js"],"names":["React","PureComponent","styled","Movie","connect","bindActionCreators","getMovies","MovieList","props","isMoviesLoaded","console","log","movies","map","movie","id","mapStateToProps","state","mapDispatchToProps","dispatch","MovieGrid","div"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,aAAf,QAAmC,OAAnC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,kBAAR,QAAiC,OAAjC;AACA,SAAQC,SAAR,QAAwB,WAAxB;;IAEMC,S;;;;;;;;;;;;;;;;;;;;;;;8BAGqC,KAAKC,K,EAAjCC,c,eAAAA,c,EAAeH,S,eAAAA,S;;AACtB,oBAAG,CAACG,cAAJ,EAAmB;AACfH,kBAAAA,SAAS;AACZ;;;;;;;;;;;;;;;;;;6BAIG;AACJI,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAM,KAAKH,KAAvB;AACA,aAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKA,KAAL,CAAWI,MAAX,CAAkBC,GAAlB,CAAsB,UAAAC,KAAK;AAAA,eACxB,oBAAC,KAAD;AAAO,UAAA,GAAG,EAAEA,KAAK,CAACC,EAAlB;AAAsB,UAAA,KAAK,EAAED,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADwB;AAAA,OAA3B,CADL,MAFJ;AAQH;;;;EApBmBb,a;;AAuBxB,IAAMe,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAC9BL,IAAAA,MAAM,EAAGK,KAAK,CAACL,MAAN,CAAaA,MADQ;AAE9BH,IAAAA,cAAc,EAAGQ,KAAK,CAACL,MAAN,CAAaH;AAFA,GAAL;AAAA,CAA7B;;AAKA,IAAMS,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAId,kBAAkB,CAAC;AACtDC,IAAAA,SAAS,EAATA;AADsD,GAAD,EAEvDa,QAFuD,CAAtB;AAAA,CAAnC;;AAIA,eAAef,OAAO,CAACY,eAAD,EAAiBE,kBAAjB,CAAP,CAA4CX,SAA5C,CAAf;AAEA,IAAMa,SAAS,GAAGlB,MAAM,CAACmB,GAAV,mBAAf","sourcesContent":["import React, {PureComponent} from 'react';\r\nimport styled from 'styled-components';\r\nimport Movie from './Movie'\r\n\r\nimport { connect } from 'react-redux';\r\nimport {bindActionCreators} from 'redux'\r\nimport {getMovies} from './actions'\r\n\r\nclass MovieList extends PureComponent{\r\n\r\n    async componentDidMount() {\r\n        const {isMoviesLoaded,getMovies} = this.props\r\n        if(!isMoviesLoaded){\r\n            getMovies()\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n        console.log(\" \" + this.props)\r\n        return(\r\n            \r\n            <MovieGrid>\r\n                {this.props.movies.map(movie => \r\n                    <Movie key={movie.id} movie={movie} />\r\n                )};\r\n            </MovieGrid>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    movies : state.movies.movies,\r\n    isMoviesLoaded : state.movies.isMoviesLoaded\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    getMovies\r\n},dispatch)\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(MovieList);\r\n\r\nconst MovieGrid = styled.div`\r\n    display: grid;\r\n    padding : 1rem;\r\n    grid-template-columns : repeat(6,1fr);\r\n    grid-row-gap: 1rem;\r\n`"]},"metadata":{},"sourceType":"module"}